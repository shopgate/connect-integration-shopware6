{
  "info": {
    "_postman_id": "1f66b7dc-21b8-4886-bb54-7917b9786664",
    "name": "SW6 SG Connect",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "init",
      "item": [
        {
          "name": "SW: get channel key",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Has access key\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    const storeFront = jsonData.data.find((channel) => channel.name === 'Storefront')\r",
                  "    pm.expect(storeFront).not.be.undefined;\r",
                  "    pm.expect(storeFront.accessKey).to.be.a('string');\r",
                  "    pm.environment.set(\"gen_accessKey\", storeFront.accessKey);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {}
          },
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{gen_access_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Accept",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"includes\": {\r\n        \"sales_channel\": [\"name\", \"accessKey\"]\r\n    }\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{sw_endpoint_api}}/search/sales-channel",
              "host": [
                "{{sw_endpoint_api}}"
              ],
              "path": [
                "search",
                "sales-channel"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "logged in",
      "item": [
        {
          "name": "guest (3), cust (0)",
          "item": [
            {
              "name": "Fetch the current context",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Save context token\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.token).to.be.a('string');\r",
                      "    pm.environment.set(\"gen_contextToken\", jsonData.token);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/context",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "context"
                  ]
                },
                "description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
              },
              "response": [
                {
                  "name": "Returns the current context.",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{sw_store_api}}/context",
                      "host": [
                        "{{sw_store_api}}"
                      ],
                      "path": [
                        "context"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
                }
              ]
            },
            {
              "name": "Add items to the cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n \"items\": [\n    {\n      \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n      \"quantity\": 3,\n      \"type\": \"product\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{sw_store_api}}/checkout/cart/line-item",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "checkout",
                    "cart",
                    "line-item"
                  ]
                },
                "description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
              },
              "response": [
                {
                  "name": "The updated cart.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/checkout/cart/line-item",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "checkout",
                        "cart",
                        "line-item"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
                }
              ]
            },
            {
              "name": "Log in a customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Save context token\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.contextToken).to.be.a('string');\r",
                      "    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"{{userEmail}}\",\n  \"password\": \"{{userPass}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{sw_store_api}}/account/login",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "account",
                    "login"
                  ]
                },
                "description": "Logs in customers given their credentials."
              },
              "response": [
                {
                  "name": "A successful login returns a context token which is associated with the logged in user. Use that as your `sw-context-token` header for subsequent requests.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/account/login",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "account",
                        "login"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
                },
                {
                  "name": "If credentials are incorrect an error is returned",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/account/login",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "account",
                        "login"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errors\": [\n    {\n      \"id\": \"elit deserunt anim\",\n      \"links\": {\n        \"non_41c\": \"https://amphPntjNrPIvATAKBdNNmy.sqbwr6Pr17dylNZJ2ie+kQY5w\"\n      },\n      \"status\": \"cupidatat consequat do Ut in\",\n      \"code\": \"minim mollit Lorem ullamco\",\n      \"title\": \"Lorem aute in\",\n      \"detail\": \"Ut non\",\n      \"source\": {\n        \"pointer\": \"magna deserunt\",\n        \"parameter\": \"dolor voluptate velit laboris\"\n      },\n      \"meta\": {\n        \"exercitation2_1\": -7211244\n      }\n    },\n    {\n      \"id\": \"consequat ut\",\n      \"links\": {\n        \"anim_71\": \"http://qGzMxoQxaKpAKg.sjQ-bSkAHUB.lcqBMrKSSo+fOvgiNtoEVllGbQX8uGNDrAUHqIZrL+9?flsk&\"\n      },\n      \"status\": \"veniam et\",\n      \"code\": \"aliqua sed\",\n      \"title\": \"Lorem consequat\",\n      \"detail\": \"ex sit in\",\n      \"source\": {\n        \"pointer\": \"ut in\",\n        \"parameter\": \"occaecat do Lorem ullamco esse\"\n      },\n      \"meta\": {\n        \"laborum_e\": \"consequat veniam tempor\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"adba\": -33550490,\n    \"eu__2\": \"in\"\n  },\n  \"links\": {\n    \"fugiat22\": \"https://dLXCZjVIaxFC.haegj8MMpow,Zl.b\"\n  }\n}"
                }
              ]
            },
            {
              "name": "get sg login token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Has token\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.token).to.be.a('string')\r",
                      "    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
                      "    pm.expect(jsonData.expiration).to.be.a('number');\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/sgconnect/login/token",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "sgconnect",
                    "login",
                    "token"
                  ]
                },
                "description": "Fetches a list of compressed sitemap files, which are often used by search engines."
              },
              "response": [
                {
                  "name": "Return a token",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/sitemap",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "sitemap"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
                },
                {
                  "name": "bad secret error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "sw-context-token",
                        "value": "{{gen_contextToken}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{sw_store_api}}/sgconnect/login/token",
                      "host": [
                        "{{sw_store_api}}"
                      ],
                      "path": [
                        "sgconnect",
                        "login",
                        "token"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Sat, 26 Mar 2022 11:53:37 GMT"
                    },
                    {
                      "key": "Server",
                      "value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "PHP/7.4.12"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET,POST,PUT,PATCH,DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                    },
                    {
                      "key": "sw-context-token",
                      "value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
                    },
                    {
                      "key": "x-frame-options",
                      "value": "deny"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "52f720"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:7777/_profiler/52f720"
                    },
                    {
                      "key": "X-Robots-Tag",
                      "value": "noindex"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Frontend login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Should be cart page\", function () {\r",
                      "    pm.response.headers.all().map(header => {\r",
                      "        if(header.key === 'X-Symfony-Cache'){\r",
                      "            pm.expect(header.value).to.include('/checkout/cart', 'should be cart page');\r",
                      "        }\r",
                      "    })\r",
                      "});\r",
                      "\r",
                      "// Load the HTML response to $\r",
                      "const $ = cheerio.load(pm.response.text());\r",
                      "pm.test(\"Check cart page\", function () {\r",
                      "    const totals = $('.hidden-line-items-information')\r",
                      "    const lineItem = $('.hidden-line-item')\r",
                      "    pm.expect(totals).to.be.not.undefined;\r",
                      "    pm.expect(lineItem).to.be.not.undefined;\r",
                      "    pm.expect(lineItem.attr('data-quantity')).to.eq('3')\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{sw_endpoint_frontend}}/sgconnect/login?token={{gen_login_token}}",
                  "host": [
                    "{{sw_endpoint_frontend}}"
                  ],
                  "path": [
                    "sgconnect",
                    "login"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "{{gen_login_token}}"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Frontend login",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{sw_endpoint_frontend}}/sgconnect/login?token={{gen_login_token}}",
                      "host": [
                        "{{sw_endpoint_frontend}}"
                      ],
                      "path": [
                        "sgconnect",
                        "login"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "{{gen_login_token}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Mon, 28 Mar 2022 10:00:05 GMT"
                    },
                    {
                      "key": "Server",
                      "value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "PHP/7.4.12"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "session-=1cscrpqsidkphomnfmdn5q96bc; path=/; HttpOnly; SameSite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "sf_redirect=deleted; expires=Sun, 28-Mar-2021 10:00:13 GMT; Max-Age=0; path=/; httponly"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.checkout.configure]=4448c72c00d853284d9beff8.N_tQl_9mmSwI7Sut7MLW5zclfAPcrogQR4LLp7EmB7k.ZMkgwswA1ENmmhv1oLKcoEZpUWWKx_4lC-Sjn_xXd-hArjnYhQr8XWS5Yg; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.account.addressbook]=7d9c3b712fc12dfb003baf6f4.-D_AGO0RWiWAIsl4_o1qtD1R2g7VoxfNnM81BVQp3QI.mnWIKqomEHX1QIwKnNQL_E5niGiF1WKfxYl-UXlliVa2fZF93l8tc-R6nA; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.checkout.line-item.change-quantity]=d750593c8667d8dc5b93383.1myVXa_07DB4Y4mxFq72EGFBv__Vp0hOQCZeWetfcKU.pwvPCf23qQQ_AsjpQMmZQQ8Q3saC7TsMDmQvEo8zMojlA94Tl8WeeE0R0A; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.checkout.line-item.delete]=5ea1c68f30559255108f25959050a929._5Cmz0bvl4bnzKO7F3OzKDpZidHjlVaxD8mJja9snuc.i9SVlneL2_yJhe7ScDLaTXU905aPzxXwWpC8x-Y03deO3cmQA77Uq4-Z7g; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.checkout.finish.order]=965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.store-api.proxy]=c.oMJ-AT2lk7aGbw-IzybVfR35lcoHnXUd3-XNeqVA4Fs.__UPQkrPp_XCCl7ggmeRF26mzJp1yztLu4KpDckQpTXIpDU3C87l_-8GZA; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET,POST,PUT,PATCH,DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Referrer-Policy",
                      "value": "strict-origin-when-cross-origin"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "f64d0a"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:7777/_profiler/f64d0a"
                    },
                    {
                      "key": "X-Robots-Tag",
                      "value": "noindex"
                    },
                    {
                      "key": "Keep-Alive",
                      "value": "timeout=5, max=96"
                    },
                    {
                      "key": "Connection",
                      "value": "Keep-Alive"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Content-Type",
                      "value": "text/html; charset=UTF-8"
                    }
                  ],
                  "cookie": [],
                  "body": "<!DOCTYPE html>\n<html lang=\"en-GB\"\n      itemscope=\"itemscope\"\n      itemtype=\"https://schema.org/WebPage\">\n    <head>\n    </head>\n    <body class=\"is-ctl-checkout is-act-confirmpage\">\n        <header class=\"header-minimal\">\n        </header>\n        <main class=\"content-main\">\n            <div class=\"container\">\n                <div class=\"container-main\">\n                    <div class=\"checkout\">\n                        <div class=\"checkout-container\">\n                            <div class=\"checkout-main\">\n                                 <h1 class=\"confirm-main-header\">Complete order </h1>\n                                <div class=\"d-none hidden-line-items-information\"\n         data-currency=\"EUR\"\n         data-shipping=\"5.5\"\n         data-value=\"1493.35\"\n         data-tax=\"238.44\"\n    >\n                                    <span class=\"hidden-line-item\"\n                      data-id=\"5c5ad48ee35a441d8057ae7433f840a2\"\n                      data-name=\"Main product\"\n                      data-quantity=\"3\"\n                      data-price=\"495.95\">\n                </span>\n                                </div>\n                            </div>\n                            <div class=\"checkout-aside \">\n                                <div class=\"checkout-aside-container\">\n                                    <div class=\"checkout-aside-summary\">\n                                        <h2 class=\"checkout-aside-summary-header\">\n                                                    Summary\n                                                </h2>\n                                        <div class=\"checkout-aside-summary-list-container\">\n                                            <div class=\"checkout-aside-summary-container\">\n                                                <dl class=\"row checkout-aside-summary-list no-gutters \">\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n            Total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n            €1,487.85*\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n                    Shipping costs\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n                    €5.50*\n                </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label checkout-aside-summary-total\">\n            Grand total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value checkout-aside-summary-total\">\n            €1,493.35*        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-net\">\n            Net total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-net\">\n            €1,254.91\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-tax\">\n                    plus 19% VAT\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-tax\">\n                    €238.44\n                </dd>\n                                                </dl>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"checkout-aside-action\">\n                                        <form id=\"confirmOrderForm\"\n              action=\"/checkout/order\"\n              data-form-csrf-handler=\"true\"\n              data-form-preserver=\"true\"\n              data-form-submit-loader=\"true\"\n              method=\"post\">\n                                            <input type=\"hidden\" name=\"_csrf_token\" value=\"965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ\">\n                                            <button id=\"confirmFormSubmit\"\n                        class=\"btn btn-primary btn-block btn-lg\"\n                        form=\"confirmOrderForm\"\n                                            type=\"submit\">\n                    Submit order\n                </button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"footer-minimal\">\n        </footer>\n</body>\n</html>"
                }
              ]
            },
            {
              "name": "unset front session",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Allow cookie deletion by going to cookies -> Domain Allowlist\r",
                      "const jar = pm.cookies.jar();\r",
                      "jar.unset(pm.environment.get(\"host\"), 'session-', function (error) {\r",
                      "    if (error) {\r",
                      "        console.log(error.message)\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{sw_endpoint_frontend}}",
                  "host": [
                    "{{sw_endpoint_frontend}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "A test case checking merge when guest has 3 items, customer has no items in cart before merge"
        },
        {
          "name": "cust (3), guest (1), cust (4)",
          "item": [
            {
              "name": "Log out a customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Save context token\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.contextToken).to.be.a('string');\r",
                      "    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/account/logout",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "account",
                    "logout"
                  ]
                },
                "description": "Logs out a customer."
              },
              "response": [
                {
                  "name": "A successful logout returns a context token for the anonymous user. Use that as your `sw-context-token` header for subsequent requests.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/account/logout",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "account",
                        "logout"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
                },
                {
                  "name": "If the user is not logged in, a 403 error is returned.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/account/logout",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "account",
                        "logout"
                      ]
                    }
                  },
                  "status": "Forbidden",
                  "code": 403,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{}"
                }
              ]
            },
            {
              "name": "Add items to the cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"has 1 item\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.lineItems).to.be.lengthOf(1);",
                      "    pm.expect(jsonData.lineItems[0]).to.haveOwnProperty('quantity').to.eq(1);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n \"items\": [\n    {\n        \"id\": \"16d5986a83da4a92b6ec1f11a5a0874e\",\n        \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n        \"quantity\": 1,\n        \"type\": \"product\"\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{sw_store_api}}/checkout/cart/line-item",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "checkout",
                    "cart",
                    "line-item"
                  ]
                },
                "description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
              },
              "response": [
                {
                  "name": "The updated cart.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/checkout/cart/line-item",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "checkout",
                        "cart",
                        "line-item"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
                }
              ]
            },
            {
              "name": "Log in a customer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Save context token\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.contextToken).to.be.a('string');\r",
                      "    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"username\": \"{{userEmail}}\",\n  \"password\": \"{{userPass}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{sw_store_api}}/account/login",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "account",
                    "login"
                  ]
                },
                "description": "Logs in customers given their credentials."
              },
              "response": [
                {
                  "name": "A successful login returns a context token which is associated with the logged in user. Use that as your `sw-context-token` header for subsequent requests.",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/account/login",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "account",
                        "login"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
                },
                {
                  "name": "If credentials are incorrect an error is returned",
                  "originalRequest": {
                    "method": "POST",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "{{baseUrl}}/account/login",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "account",
                        "login"
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"errors\": [\n    {\n      \"id\": \"elit deserunt anim\",\n      \"links\": {\n        \"non_41c\": \"https://amphPntjNrPIvATAKBdNNmy.sqbwr6Pr17dylNZJ2ie+kQY5w\"\n      },\n      \"status\": \"cupidatat consequat do Ut in\",\n      \"code\": \"minim mollit Lorem ullamco\",\n      \"title\": \"Lorem aute in\",\n      \"detail\": \"Ut non\",\n      \"source\": {\n        \"pointer\": \"magna deserunt\",\n        \"parameter\": \"dolor voluptate velit laboris\"\n      },\n      \"meta\": {\n        \"exercitation2_1\": -7211244\n      }\n    },\n    {\n      \"id\": \"consequat ut\",\n      \"links\": {\n        \"anim_71\": \"http://qGzMxoQxaKpAKg.sjQ-bSkAHUB.lcqBMrKSSo+fOvgiNtoEVllGbQX8uGNDrAUHqIZrL+9?flsk&\"\n      },\n      \"status\": \"veniam et\",\n      \"code\": \"aliqua sed\",\n      \"title\": \"Lorem consequat\",\n      \"detail\": \"ex sit in\",\n      \"source\": {\n        \"pointer\": \"ut in\",\n        \"parameter\": \"occaecat do Lorem ullamco esse\"\n      },\n      \"meta\": {\n        \"laborum_e\": \"consequat veniam tempor\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"adba\": -33550490,\n    \"eu__2\": \"in\"\n  },\n  \"links\": {\n    \"fugiat22\": \"https://dLXCZjVIaxFC.haegj8MMpow,Zl.b\"\n  }\n}"
                }
              ]
            },
            {
              "name": "get sg login token",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {\r",
                      "    pm.response.to.have.status(200);\r",
                      "});\r",
                      "\r",
                      "pm.test(\"Has token\", function () {\r",
                      "    var jsonData = pm.response.json();\r",
                      "    pm.expect(jsonData.token).to.be.a('string')\r",
                      "    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
                      "    pm.expect(jsonData.expiration).to.be.a('number');\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/sgconnect/login/token",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "sgconnect",
                    "login",
                    "token"
                  ]
                },
                "description": "Fetches a list of compressed sitemap files, which are often used by search engines."
              },
              "response": [
                {
                  "name": "Return a token",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/sitemap",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "sitemap"
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
                },
                {
                  "name": "bad secret error",
                  "originalRequest": {
                    "method": "GET",
                    "header": [
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      },
                      {
                        "key": "sw-context-token",
                        "value": "{{gen_contextToken}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{sw_store_api}}/sgconnect/login/token",
                      "host": [
                        "{{sw_store_api}}"
                      ],
                      "path": [
                        "sgconnect",
                        "login",
                        "token"
                      ]
                    }
                  },
                  "status": "Internal Server Error",
                  "code": 500,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Sat, 26 Mar 2022 11:53:37 GMT"
                    },
                    {
                      "key": "Server",
                      "value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "PHP/7.4.12"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET,POST,PUT,PATCH,DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                    },
                    {
                      "key": "sw-context-token",
                      "value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
                    },
                    {
                      "key": "x-frame-options",
                      "value": "deny"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "52f720"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:7777/_profiler/52f720"
                    },
                    {
                      "key": "X-Robots-Tag",
                      "value": "noindex"
                    },
                    {
                      "key": "Connection",
                      "value": "close"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
                }
              ]
            },
            {
              "name": "Frontend login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Should be cart page\", function () {\r",
                      "    pm.response.headers.all().map(header => {\r",
                      "        if(header.key === 'X-Symfony-Cache'){\r",
                      "            pm.expect(header.value).to.include('/checkout/cart', 'should be cart page');\r",
                      "        }\r",
                      "    })\r",
                      "});\r",
                      "\r",
                      "// Load the HTML response to $\r",
                      "const $ = cheerio.load(pm.response.text());\r",
                      "pm.test(\"Check cart page\", function () {\r",
                      "    const totals = $('.hidden-line-items-information')\r",
                      "    const lineItem = $('.hidden-line-item')\r",
                      "    pm.expect(totals).to.be.not.undefined;\r",
                      "    pm.expect(lineItem).to.be.not.undefined;\r",
                      "    pm.expect(lineItem.length).to.eq(2, 'Should have 1 qty main + 3 qty main product');\r",
                      "});\r",
                      ""
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{sw_endpoint_frontend}}/sgconnect/login?token={{gen_login_token}}",
                  "host": [
                    "{{sw_endpoint_frontend}}"
                  ],
                  "path": [
                    "sgconnect",
                    "login"
                  ],
                  "query": [
                    {
                      "key": "token",
                      "value": "{{gen_login_token}}"
                    }
                  ]
                }
              },
              "response": [
                {
                  "name": "Frontend login",
                  "originalRequest": {
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{sw_endpoint_frontend}}/sgconnect/login?token={{gen_login_token}}",
                      "host": [
                        "{{sw_endpoint_frontend}}"
                      ],
                      "path": [
                        "sgconnect",
                        "login"
                      ],
                      "query": [
                        {
                          "key": "token",
                          "value": "{{gen_login_token}}"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "_postman_previewlanguage": "html",
                  "header": [
                    {
                      "key": "Date",
                      "value": "Mon, 28 Mar 2022 10:00:05 GMT"
                    },
                    {
                      "key": "Server",
                      "value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
                    },
                    {
                      "key": "X-Powered-By",
                      "value": "PHP/7.4.12"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "session-=1cscrpqsidkphomnfmdn5q96bc; path=/; HttpOnly; SameSite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "sf_redirect=deleted; expires=Sun, 28-Mar-2021 10:00:13 GMT; Max-Age=0; path=/; httponly"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.checkout.configure]=4448c72c00d853284d9beff8.N_tQl_9mmSwI7Sut7MLW5zclfAPcrogQR4LLp7EmB7k.ZMkgwswA1ENmmhv1oLKcoEZpUWWKx_4lC-Sjn_xXd-hArjnYhQr8XWS5Yg; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.account.addressbook]=7d9c3b712fc12dfb003baf6f4.-D_AGO0RWiWAIsl4_o1qtD1R2g7VoxfNnM81BVQp3QI.mnWIKqomEHX1QIwKnNQL_E5niGiF1WKfxYl-UXlliVa2fZF93l8tc-R6nA; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.checkout.line-item.change-quantity]=d750593c8667d8dc5b93383.1myVXa_07DB4Y4mxFq72EGFBv__Vp0hOQCZeWetfcKU.pwvPCf23qQQ_AsjpQMmZQQ8Q3saC7TsMDmQvEo8zMojlA94Tl8WeeE0R0A; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.checkout.line-item.delete]=5ea1c68f30559255108f25959050a929._5Cmz0bvl4bnzKO7F3OzKDpZidHjlVaxD8mJja9snuc.i9SVlneL2_yJhe7ScDLaTXU905aPzxXwWpC8x-Y03deO3cmQA77Uq4-Z7g; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.checkout.finish.order]=965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Set-Cookie",
                      "value": "csrf[frontend.store-api.proxy]=c.oMJ-AT2lk7aGbw-IzybVfR35lcoHnXUd3-XNeqVA4Fs.__UPQkrPp_XCCl7ggmeRF26mzJp1yztLu4KpDckQpTXIpDU3C87l_-8GZA; path=/; httponly; samesite=lax"
                    },
                    {
                      "key": "Cache-Control",
                      "value": "no-cache, private"
                    },
                    {
                      "key": "Access-Control-Allow-Origin",
                      "value": "*"
                    },
                    {
                      "key": "Access-Control-Allow-Methods",
                      "value": "GET,POST,PUT,PATCH,DELETE"
                    },
                    {
                      "key": "Access-Control-Allow-Headers",
                      "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                    },
                    {
                      "key": "Access-Control-Expose-Headers",
                      "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                    },
                    {
                      "key": "X-Frame-Options",
                      "value": "deny"
                    },
                    {
                      "key": "X-Content-Type-Options",
                      "value": "nosniff"
                    },
                    {
                      "key": "Referrer-Policy",
                      "value": "strict-origin-when-cross-origin"
                    },
                    {
                      "key": "X-Debug-Token",
                      "value": "f64d0a"
                    },
                    {
                      "key": "X-Debug-Token-Link",
                      "value": "http://localhost:7777/_profiler/f64d0a"
                    },
                    {
                      "key": "X-Robots-Tag",
                      "value": "noindex"
                    },
                    {
                      "key": "Keep-Alive",
                      "value": "timeout=5, max=96"
                    },
                    {
                      "key": "Connection",
                      "value": "Keep-Alive"
                    },
                    {
                      "key": "Transfer-Encoding",
                      "value": "chunked"
                    },
                    {
                      "key": "Content-Type",
                      "value": "text/html; charset=UTF-8"
                    }
                  ],
                  "cookie": [],
                  "body": "<!DOCTYPE html>\n<html lang=\"en-GB\"\n      itemscope=\"itemscope\"\n      itemtype=\"https://schema.org/WebPage\">\n    <head>\n    </head>\n    <body class=\"is-ctl-checkout is-act-confirmpage\">\n        <header class=\"header-minimal\">\n        </header>\n        <main class=\"content-main\">\n            <div class=\"container\">\n                <div class=\"container-main\">\n                    <div class=\"checkout\">\n                        <div class=\"checkout-container\">\n                            <div class=\"checkout-main\">\n                                 <h1 class=\"confirm-main-header\">Complete order </h1>\n                                <div class=\"d-none hidden-line-items-information\"\n         data-currency=\"EUR\"\n         data-shipping=\"5.5\"\n         data-value=\"1493.35\"\n         data-tax=\"238.44\"\n    >\n                                    <span class=\"hidden-line-item\"\n                      data-id=\"5c5ad48ee35a441d8057ae7433f840a2\"\n                      data-name=\"Main product\"\n                      data-quantity=\"3\"\n                      data-price=\"495.95\">\n                </span>\n                                </div>\n                            </div>\n                            <div class=\"checkout-aside \">\n                                <div class=\"checkout-aside-container\">\n                                    <div class=\"checkout-aside-summary\">\n                                        <h2 class=\"checkout-aside-summary-header\">\n                                                    Summary\n                                                </h2>\n                                        <div class=\"checkout-aside-summary-list-container\">\n                                            <div class=\"checkout-aside-summary-container\">\n                                                <dl class=\"row checkout-aside-summary-list no-gutters \">\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n            Total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n            €1,487.85*\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n                    Shipping costs\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n                    €5.50*\n                </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label checkout-aside-summary-total\">\n            Grand total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value checkout-aside-summary-total\">\n            €1,493.35*        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-net\">\n            Net total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-net\">\n            €1,254.91\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-tax\">\n                    plus 19% VAT\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-tax\">\n                    €238.44\n                </dd>\n                                                </dl>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"checkout-aside-action\">\n                                        <form id=\"confirmOrderForm\"\n              action=\"/checkout/order\"\n              data-form-csrf-handler=\"true\"\n              data-form-preserver=\"true\"\n              data-form-submit-loader=\"true\"\n              method=\"post\">\n                                            <input type=\"hidden\" name=\"_csrf_token\" value=\"965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ\">\n                                            <button id=\"confirmFormSubmit\"\n                        class=\"btn btn-primary btn-block btn-lg\"\n                        form=\"confirmOrderForm\"\n                                            type=\"submit\">\n                    Submit order\n                </button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"footer-minimal\">\n        </footer>\n</body>\n</html>"
                }
              ]
            },
            {
              "name": "Delete a cart",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 204\", function () {",
                      "    pm.response.to.have.status(204);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{gen_accessKey}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "sw-access-key",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/checkout/cart",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "checkout",
                    "cart"
                  ]
                },
                "description": "This route deletes the cart of the customer."
              },
              "response": [
                {
                  "name": "Successfully deleted the cart",
                  "originalRequest": {
                    "method": "DELETE",
                    "header": [
                      {
                        "description": "Added as a part of security scheme: apikey",
                        "key": "sw-access-key",
                        "value": "{{apiKey}}"
                      },
                      {
                        "description": "(Required) Content type of the request",
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "description": "(Required) Accepted response content types",
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "url": {
                      "raw": "{{baseUrl}}/checkout/cart",
                      "host": [
                        "{{baseUrl}}"
                      ],
                      "path": [
                        "checkout",
                        "cart"
                      ]
                    }
                  },
                  "status": "No Content",
                  "code": 204,
                  "_postman_previewlanguage": "json",
                  "header": [
                    {
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "cookie": [],
                  "body": "{\n  \"success\": true\n}"
                }
              ]
            },
            {
              "name": "unset front session",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Allow cookie deletion by going to cookies -> Domain Allowlist\r",
                      "const jar = pm.cookies.jar();\r",
                      "jar.unset(pm.environment.get(\"host\"), 'session-', function (error) {\r",
                      "    if (error) {\r",
                      "        console.log(error.message)\r",
                      "    }\r",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{sw_endpoint_frontend}}",
                  "host": [
                    "{{sw_endpoint_frontend}}"
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Test merge scenario:\n\n*   customer 3 items\n*   logout\n*   guest 1 item\n*   login\n*   customer 3 items + 1 item"
        }
      ]
    },
    {
      "name": "logged out",
      "item": [
        {
          "name": "Log out a customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Save context token\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.contextToken).to.be.a('string');\r",
                  "    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{gen_accessKey}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "sw-access-key",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "(Required) Content type of the request",
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "(Required) Accepted response content types",
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "sw-context-token",
                "value": "{{gen_contextToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{sw_store_api}}/account/logout",
              "host": [
                "{{sw_store_api}}"
              ],
              "path": [
                "account",
                "logout"
              ]
            },
            "description": "Logs out a customer."
          },
          "response": [
            {
              "name": "A successful logout returns a context token for the anonymous user. Use that as your `sw-context-token` header for subsequent requests.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/account/logout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "account",
                    "logout"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
            },
            {
              "name": "If the user is not logged in, a 403 error is returned.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/account/logout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "account",
                    "logout"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{}"
            }
          ]
        },
        {
          "name": "Fetch the current context",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Save context token\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.token).to.be.a('string');\r",
                  "    pm.environment.set(\"gen_contextToken\", jsonData.token);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{gen_accessKey}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "sw-access-key",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "(Required) Content type of the request",
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "(Required) Accepted response content types",
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{sw_store_api}}/context",
              "host": [
                "{{sw_store_api}}"
              ],
              "path": [
                "context"
              ]
            },
            "description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
          },
          "response": [
            {
              "name": "Returns the current context.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/context",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "context"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
            }
          ]
        },
        {
          "name": "Add items to the cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"has 1 item\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.lineItems).to.be.lengthOf(1);",
                  "    pm.expect(jsonData.lineItems[0]).to.haveOwnProperty('quantity').to.eq(2);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{gen_accessKey}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "sw-access-key",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "(Required) Content type of the request",
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "(Required) Accepted response content types",
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "sw-context-token",
                "value": "{{gen_contextToken}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n \"items\": [\n    {\n        \"id\": \"16d5986a83da4a92b6ec1f11a5a0874e\",\n        \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n        \"quantity\": 2,\n        \"type\": \"product\"\n    }\n  ]\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{sw_store_api}}/checkout/cart/line-item",
              "host": [
                "{{sw_store_api}}"
              ],
              "path": [
                "checkout",
                "cart",
                "line-item"
              ]
            },
            "description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
          },
          "response": [
            {
              "name": "The updated cart.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/checkout/cart/line-item",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "checkout",
                    "cart",
                    "line-item"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
            }
          ]
        },
        {
          "name": "get sg login token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Has token\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.token).to.be.a('string')\r",
                  "    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
                  "    pm.expect(jsonData.expiration).to.be.a('number');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{gen_accessKey}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "sw-access-key",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "(Required) Content type of the request",
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "(Required) Accepted response content types",
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "sw-context-token",
                "value": "{{gen_contextToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{sw_store_api}}/sgconnect/login/token",
              "host": [
                "{{sw_store_api}}"
              ],
              "path": [
                "sgconnect",
                "login",
                "token"
              ]
            },
            "description": "Fetches a list of compressed sitemap files, which are often used by search engines."
          },
          "response": [
            {
              "name": "Return a token",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/sitemap",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "sitemap"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
            },
            {
              "name": "bad secret error",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/sgconnect/login/token",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "sgconnect",
                    "login",
                    "token"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Sat, 26 Mar 2022 11:53:37 GMT"
                },
                {
                  "key": "Server",
                  "value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
                },
                {
                  "key": "X-Powered-By",
                  "value": "PHP/7.4.12"
                },
                {
                  "key": "Cache-Control",
                  "value": "no-cache, private"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "GET,POST,PUT,PATCH,DELETE"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                },
                {
                  "key": "sw-context-token",
                  "value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
                },
                {
                  "key": "x-frame-options",
                  "value": "deny"
                },
                {
                  "key": "X-Debug-Token",
                  "value": "52f720"
                },
                {
                  "key": "X-Debug-Token-Link",
                  "value": "http://localhost:7777/_profiler/52f720"
                },
                {
                  "key": "X-Robots-Tag",
                  "value": "noindex"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Frontend login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Should be cart page\", function () {\r",
                  "    pm.response.headers.all().map(header => {\r",
                  "        if(header.key === 'X-Symfony-Cache'){\r",
                  "            pm.expect(header.value).to.include('/checkout/cart', 'should be cart page');\r",
                  "        }\r",
                  "    })\r",
                  "});\r",
                  "\r",
                  "// Load the HTML response to $\r",
                  "const $ = cheerio.load(pm.response.text());\r",
                  "pm.test(\"Check cart page\", function () {\r",
                  "    const totals = $('.hidden-line-items-information')\r",
                  "    const lineItem = $('.hidden-line-item')\r",
                  "    pm.expect(totals).to.be.not.undefined;\r",
                  "    pm.expect(lineItem).to.be.not.undefined;\r",
                  "    pm.expect(lineItem.attr('data-quantity')).to.eq('2')\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{sw_endpoint_frontend}}/sgconnect/login?token={{gen_login_token}}?redirectTo=frontend.checkout.cart.page",
              "host": [
                "{{sw_endpoint_frontend}}"
              ],
              "path": [
                "sgconnect",
                "login"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{gen_login_token}}?redirectTo=frontend.checkout.cart.page"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "unset front session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Allow cookie deletion by going to cookies -> Domain Allowlist\r",
                  "const jar = pm.cookies.jar();\r",
                  "jar.unset(pm.environment.get(\"host\"), 'session-', function (error) {\r",
                  "    if (error) {\r",
                  "        console.log(error.message)\r",
                  "    }\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{sw_endpoint_frontend}}",
              "host": [
                "{{sw_endpoint_frontend}}"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Force logout",
      "item": [
        {
          "name": "Log out a customer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Save context token\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.contextToken).to.be.a('string');\r",
                  "    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{gen_accessKey}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "sw-access-key",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "description": "(Required) Content type of the request",
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "(Required) Accepted response content types",
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "sw-context-token",
                "value": "{{gen_contextToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{sw_store_api}}/account/logout",
              "host": [
                "{{sw_store_api}}"
              ],
              "path": [
                "account",
                "logout"
              ]
            },
            "description": "Logs out a customer."
          },
          "response": [
            {
              "name": "A successful logout returns a context token for the anonymous user. Use that as your `sw-context-token` header for subsequent requests.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/account/logout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "account",
                    "logout"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
            },
            {
              "name": "If the user is not logged in, a 403 error is returned.",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/account/logout",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "account",
                    "logout"
                  ]
                }
              },
              "status": "Forbidden",
              "code": 403,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{}"
            }
          ]
        },
        {
          "name": "Fetch the current context",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Save context token\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.token).to.be.a('string');\r",
                  "    pm.environment.set(\"gen_contextToken\", jsonData.token);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{gen_accessKey}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "sw-access-key",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "(Required) Content type of the request",
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "(Required) Accepted response content types",
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{sw_store_api}}/context",
              "host": [
                "{{sw_store_api}}"
              ],
              "path": [
                "context"
              ]
            },
            "description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
          },
          "response": [
            {
              "name": "Returns the current context.",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/context",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "context"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
            }
          ]
        },
        {
          "name": "get sg login token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Has token\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.token).to.be.a('string')\r",
                  "    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
                  "    pm.expect(jsonData.expiration).to.be.a('number');\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{gen_accessKey}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "sw-access-key",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "description": "(Required) Content type of the request",
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "description": "(Required) Accepted response content types",
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "sw-context-token",
                "value": "{{gen_contextToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{sw_store_api}}/sgconnect/login/token",
              "host": [
                "{{sw_store_api}}"
              ],
              "path": [
                "sgconnect",
                "login",
                "token"
              ]
            },
            "description": "Fetches a list of compressed sitemap files, which are often used by search engines."
          },
          "response": [
            {
              "name": "Return a token",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "Added as a part of security scheme: apikey",
                    "key": "sw-access-key",
                    "value": "{{apiKey}}"
                  },
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/sitemap",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "sitemap"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
            },
            {
              "name": "bad secret error",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "description": "(Required) Content type of the request",
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "description": "(Required) Accepted response content types",
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "sw-context-token",
                    "value": "{{gen_contextToken}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{sw_store_api}}/sgconnect/login/token",
                  "host": [
                    "{{sw_store_api}}"
                  ],
                  "path": [
                    "sgconnect",
                    "login",
                    "token"
                  ]
                }
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Date",
                  "value": "Sat, 26 Mar 2022 11:53:37 GMT"
                },
                {
                  "key": "Server",
                  "value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
                },
                {
                  "key": "X-Powered-By",
                  "value": "PHP/7.4.12"
                },
                {
                  "key": "Cache-Control",
                  "value": "no-cache, private"
                },
                {
                  "key": "Access-Control-Allow-Origin",
                  "value": "*"
                },
                {
                  "key": "Access-Control-Allow-Methods",
                  "value": "GET,POST,PUT,PATCH,DELETE"
                },
                {
                  "key": "Access-Control-Allow-Headers",
                  "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                },
                {
                  "key": "Access-Control-Expose-Headers",
                  "value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
                },
                {
                  "key": "sw-context-token",
                  "value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
                },
                {
                  "key": "x-frame-options",
                  "value": "deny"
                },
                {
                  "key": "X-Debug-Token",
                  "value": "52f720"
                },
                {
                  "key": "X-Debug-Token-Link",
                  "value": "http://localhost:7777/_profiler/52f720"
                },
                {
                  "key": "X-Robots-Tag",
                  "value": "noindex"
                },
                {
                  "key": "Connection",
                  "value": "close"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
            }
          ]
        },
        {
          "name": "Frontend login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Load the HTML response to $\r",
                  "const $ = cheerio.load(pm.response.text());\r",
                  "pm.test(\"Check we are on forced loggout page\", function () {\r",
                  "    const bodyClass = $('.is-ctl-sgconnect.is-act-logout')\r",
                  "    pm.expect(bodyClass).to.be.lengthOf(1);\r",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "\r",
                  ""
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{sw_endpoint_frontend}}/sgconnect/login?token={{gen_login_token}}?redirectTo=frontend.account.home.page&isLoggedIn=true",
              "host": [
                "{{sw_endpoint_frontend}}"
              ],
              "path": [
                "sgconnect",
                "login"
              ],
              "query": [
                {
                  "key": "token",
                  "value": "{{gen_login_token}}?redirectTo=frontend.account.home.page"
                },
                {
                  "key": "isLoggedIn",
                  "value": "true"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "/**",
          " * SW Token generation",
          " */",
          "var getToken = true;",
          "if (!pm.environment.get('gen_token_expires') || !pm.environment.get('gen_access_token')) {",
          "    console.log('Token or expiry date are missing');",
          "} else if (pm.environment.get('gen_token_expires') <= (new Date()).getTime()) {",
          "    console.log('Token is expired');",
          "} else {",
          "    getToken = false;",
          "}",
          "",
          "if (getToken === true) {",
          "    const createRequest = {",
          "        \"client_id\": pm.environment.get(\"sw_client_id\"),",
          "        \"grant_type\": \"password\",",
          "        \"scopes\": \"write\",",
          "        \"username\": pm.environment.get(\"sw_admin\"),",
          "        \"password\": pm.environment.get(\"sw_pass\")",
          "    };",
          "    const refreshRequest = {",
          "        \"grant_type\": \"refresh_token\",",
          "        \"client_id\": pm.environment.get(\"sw_client_id\"),",
          "        \"refresh_token\": pm.environment.get(\"gen_refresh_token\")",
          "    };",
          "    // SW Auth",
          "    const authRequest = {",
          "        url: pm.globals.replaceIn(pm.environment.replaceIn(pm.environment.get(\"sw_endpoint_auth\"))),",
          "        method: 'POST',",
          "        header: 'Accept: application/json\\nContent-Type: application/json; charset=utf-8',",
          "        body: {",
          "            mode: 'application/json'",
          "        }",
          "    };",
          "    // set body depending on type of request needed",
          "    authRequest.body.raw = JSON.stringify(pm.environment.get(\"gen_refresh_token\") ? refreshRequest : createRequest);",
          "    pm.sendRequest(authRequest, function (err, res) {",
          "        if (res.code !== 200) {",
          "            pm.environment.unset('gen_access_token');",
          "            pm.environment.unset('gen_token_expires');",
          "            pm.environment.unset('gen_refresh_token');",
          "            console.log('Invalidated refresh token');",
          "            return;",
          "        }",
          "        ",
          "        var responseJson = res.json();",
          "        pm.environment.set('gen_access_token', responseJson.access_token)",
          "",
          "        var expiryDate = new Date();",
          "        expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
          "        pm.environment.set('gen_token_expires', expiryDate.getTime());",
          "        pm.environment.set('gen_refresh_token', responseJson.refresh_token);",
          "        console.log('Saved the token and expiry date');",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// remove generated token data if not authorized",
          "if (pm.response.code === 401) {",
          "    console.log('Removing tokens due to 401 response. Please try again.');",
          "    pm.environment.unset('gen_access_token');",
          "    pm.environment.unset('gen_token_expires');",
          "    pm.environment.unset('gen_refresh_token');",
          "}"
        ]
      }
    }
  ]
}
