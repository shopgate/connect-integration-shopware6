{
	"info": {
		"_postman_id": "9a5743ee-4e2a-4398-911a-aeb76de53725",
		"name": "SW6 SG Webcheckout",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5289226"
	},
	"item": [
		{
			"name": "init",
			"item": [
				{
					"name": "SW: get channel key",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Has access key\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    const storeFront = jsonData.data.find((channel) => channel.name === 'Storefront')\r",
									"    pm.expect(storeFront).not.be.undefined;\r",
									"    pm.expect(storeFront.accessKey).to.be.a('string');\r",
									"    pm.environment.set(\"gen_accessKey\", storeFront.accessKey);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{gen_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"includes\": {\r\n        \"sales_channel\": [\"name\", \"accessKey\"]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_endpoint_api}}/search/sales-channel",
							"host": [
								"{{sw_endpoint_api}}"
							],
							"path": [
								"search",
								"sales-channel"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Extend Session",
			"item": [
				{
					"name": "Fetch context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check that expired token is extended\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.be.a('string').to.eq(pm.environment.get('migration_user_contextToken'));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "sw-context-token",
								"value": "{{migration_user_contextToken}}",
								"type": "text",
								"description": "default test token installed via migration script"
							},
							{
								"key": "shopgate-check",
								"value": "1",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{sw_store_api}}/context",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"context"
							]
						},
						"description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
					},
					"response": [
						{
							"name": "Returns the current context.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/context",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"context"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Log in a customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Make sure token changes on login\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.contextToken).to.be.a('string').to.not.eq(pm.environment.get('migration_user_contextToken'));\r",
									"    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "sw-context-token",
								"value": "WSLpAnT3vJsBt9R6rFpS9yKApkAwh9mu",
								"type": "text",
								"description": "default test token installed via migration script"
							},
							{
								"key": "shopgate-check",
								"value": "1",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{userEmail}}\",\n  \"password\": \"{{userPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_store_api}}/account/login",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"account",
								"login"
							]
						},
						"description": "Logs in customers given their credentials."
					},
					"response": [
						{
							"name": "A successful login returns a context token which is associated with the logged in user. Use that as your `sw-context-token` header for subsequent requests.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
						},
						{
							"name": "If credentials are incorrect an error is returned",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/account/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"login"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"errors\": [\n    {\n      \"id\": \"elit deserunt anim\",\n      \"links\": {\n        \"non_41c\": \"https://amphPntjNrPIvATAKBdNNmy.sqbwr6Pr17dylNZJ2ie+kQY5w\"\n      },\n      \"status\": \"cupidatat consequat do Ut in\",\n      \"code\": \"minim mollit Lorem ullamco\",\n      \"title\": \"Lorem aute in\",\n      \"detail\": \"Ut non\",\n      \"source\": {\n        \"pointer\": \"magna deserunt\",\n        \"parameter\": \"dolor voluptate velit laboris\"\n      },\n      \"meta\": {\n        \"exercitation2_1\": -7211244\n      }\n    },\n    {\n      \"id\": \"consequat ut\",\n      \"links\": {\n        \"anim_71\": \"http://qGzMxoQxaKpAKg.sjQ-bSkAHUB.lcqBMrKSSo+fOvgiNtoEVllGbQX8uGNDrAUHqIZrL+9?flsk&\"\n      },\n      \"status\": \"veniam et\",\n      \"code\": \"aliqua sed\",\n      \"title\": \"Lorem consequat\",\n      \"detail\": \"ex sit in\",\n      \"source\": {\n        \"pointer\": \"ut in\",\n        \"parameter\": \"occaecat do Lorem ullamco esse\"\n      },\n      \"meta\": {\n        \"laborum_e\": \"consequat veniam tempor\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"adba\": -33550490,\n    \"eu__2\": \"in\"\n  },\n  \"links\": {\n    \"fugiat22\": \"https://dLXCZjVIaxFC.haegj8MMpow,Zl.b\"\n  }\n}"
						}
					]
				},
				{
					"name": "Guest: add to cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check that expired token is extended\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token).to.be.a('string').to.eq(pm.environment.get('migration_guest_contextToken'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "sw-context-token",
								"value": "{{migration_guest_contextToken}}",
								"type": "text",
								"description": "default test guest token installed via migration script"
							},
							{
								"key": "shopgate-check",
								"value": "1",
								"type": "text",
								"description": "required to extend expired sessions"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"items\": [\n    {\n      \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n      \"quantity\": 1,\n      \"type\": \"product\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_store_api}}/checkout/cart/line-item",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"checkout",
								"cart",
								"line-item"
							]
						},
						"description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
					},
					"response": [
						{
							"name": "The updated cart.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/checkout/cart/line-item",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"checkout",
										"cart",
										"line-item"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
						}
					]
				}
			],
			"description": "SW6M-39 tests whether a session can be extended by calling the default API endpoints for customer & guests"
		},
		{
			"name": "logged in",
			"item": [
				{
					"name": "guest (3), cust (0)",
					"item": [
						{
							"name": "Fetch the current context",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Save context token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string');\r",
											"    pm.environment.set(\"gen_contextToken\", jsonData.token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/context",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"context"
									]
								},
								"description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
							},
							"response": [
								{
									"name": "Returns the current context.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/context",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"context"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
								}
							]
						},
						{
							"name": "Add items to the cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"items\": [\n    {\n      \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n      \"quantity\": 3,\n      \"type\": \"product\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{sw_store_api}}/checkout/cart/line-item",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"checkout",
										"cart",
										"line-item"
									]
								},
								"description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
							},
							"response": [
								{
									"name": "The updated cart.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/checkout/cart/line-item",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"checkout",
												"cart",
												"line-item"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
								}
							]
						},
						{
							"name": "Log in a customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Save context token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.contextToken).to.be.a('string');\r",
											"    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userEmail}}\",\n  \"password\": \"{{userPass}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{sw_store_api}}/account/login",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Logs in customers given their credentials."
							},
							"response": [
								{
									"name": "A successful login returns a context token which is associated with the logged in user. Use that as your `sw-context-token` header for subsequent requests.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
								},
								{
									"name": "If credentials are incorrect an error is returned",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errors\": [\n    {\n      \"id\": \"elit deserunt anim\",\n      \"links\": {\n        \"non_41c\": \"https://amphPntjNrPIvATAKBdNNmy.sqbwr6Pr17dylNZJ2ie+kQY5w\"\n      },\n      \"status\": \"cupidatat consequat do Ut in\",\n      \"code\": \"minim mollit Lorem ullamco\",\n      \"title\": \"Lorem aute in\",\n      \"detail\": \"Ut non\",\n      \"source\": {\n        \"pointer\": \"magna deserunt\",\n        \"parameter\": \"dolor voluptate velit laboris\"\n      },\n      \"meta\": {\n        \"exercitation2_1\": -7211244\n      }\n    },\n    {\n      \"id\": \"consequat ut\",\n      \"links\": {\n        \"anim_71\": \"http://qGzMxoQxaKpAKg.sjQ-bSkAHUB.lcqBMrKSSo+fOvgiNtoEVllGbQX8uGNDrAUHqIZrL+9?flsk&\"\n      },\n      \"status\": \"veniam et\",\n      \"code\": \"aliqua sed\",\n      \"title\": \"Lorem consequat\",\n      \"detail\": \"ex sit in\",\n      \"source\": {\n        \"pointer\": \"ut in\",\n        \"parameter\": \"occaecat do Lorem ullamco esse\"\n      },\n      \"meta\": {\n        \"laborum_e\": \"consequat veniam tempor\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"adba\": -33550490,\n    \"eu__2\": \"in\"\n  },\n  \"links\": {\n    \"fugiat22\": \"https://dLXCZjVIaxFC.haegj8MMpow,Zl.b\"\n  }\n}"
								}
							]
						},
						{
							"name": "get sg login token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Has token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string')\r",
											"    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
											"    pm.expect(jsonData.expiration).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"sgwebcheckout",
										"login",
										"token"
									]
								},
								"description": "Fetches a list of compressed sitemap files, which are often used by search engines."
							},
							"response": [
								{
									"name": "Return a token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sitemap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sitemap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
								},
								{
									"name": "bad secret error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sw-context-token",
												"value": "{{gen_contextToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"sgwebcheckout",
												"login",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 26 Mar 2022 11:53:37 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "sw-context-token",
											"value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
										},
										{
											"key": "x-frame-options",
											"value": "deny"
										},
										{
											"key": "X-Debug-Token",
											"value": "52f720"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/52f720"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Frontend login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Load the HTML response to $\r",
											"const $ = cheerio.load(pm.response.text());\r",
											"pm.test(\"Check cart page\", function () {\r",
											"    const totals = $('.hidden-line-items-information')\r",
											"    const lineItem = $('.hidden-line-item')\r",
											"    pm.expect(totals).to.be.not.undefined;\r",
											"    pm.expect(lineItem).to.be.not.undefined;\r",
											"    pm.expect(lineItem.attr('data-quantity')).to.eq('3')\r",
											"});\r",
											"\r",
											"pm.test(\"Check we are in cart confirm page\", function () {\r",
											"    const bodyClass = $('.is-ctl-checkout.is-act-confirmpage')\r",
											"    pm.expect(bodyClass).to.be.lengthOf(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}",
									"host": [
										"{{sw_endpoint_frontend}}"
									],
									"path": [
										"sgwebcheckout",
										"login"
									],
									"query": [
										{
											"key": "token",
											"value": "{{gen_login_token}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Frontend login",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}",
											"host": [
												"{{sw_endpoint_frontend}}"
											],
											"path": [
												"sgwebcheckout",
												"login"
											],
											"query": [
												{
													"key": "token",
													"value": "{{gen_login_token}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 28 Mar 2022 10:00:05 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Set-Cookie",
											"value": "session-=1cscrpqsidkphomnfmdn5q96bc; path=/; HttpOnly; SameSite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "sf_redirect=deleted; expires=Sun, 28-Mar-2021 10:00:13 GMT; Max-Age=0; path=/; httponly"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.configure]=4448c72c00d853284d9beff8.N_tQl_9mmSwI7Sut7MLW5zclfAPcrogQR4LLp7EmB7k.ZMkgwswA1ENmmhv1oLKcoEZpUWWKx_4lC-Sjn_xXd-hArjnYhQr8XWS5Yg; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.account.addressbook]=7d9c3b712fc12dfb003baf6f4.-D_AGO0RWiWAIsl4_o1qtD1R2g7VoxfNnM81BVQp3QI.mnWIKqomEHX1QIwKnNQL_E5niGiF1WKfxYl-UXlliVa2fZF93l8tc-R6nA; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.line-item.change-quantity]=d750593c8667d8dc5b93383.1myVXa_07DB4Y4mxFq72EGFBv__Vp0hOQCZeWetfcKU.pwvPCf23qQQ_AsjpQMmZQQ8Q3saC7TsMDmQvEo8zMojlA94Tl8WeeE0R0A; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.line-item.delete]=5ea1c68f30559255108f25959050a929._5Cmz0bvl4bnzKO7F3OzKDpZidHjlVaxD8mJja9snuc.i9SVlneL2_yJhe7ScDLaTXU905aPzxXwWpC8x-Y03deO3cmQA77Uq4-Z7g; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.finish.order]=965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.store-api.proxy]=c.oMJ-AT2lk7aGbw-IzybVfR35lcoHnXUd3-XNeqVA4Fs.__UPQkrPp_XCCl7ggmeRF26mzJp1yztLu4KpDckQpTXIpDU3C87l_-8GZA; path=/; httponly; samesite=lax"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "X-Frame-Options",
											"value": "deny"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "strict-origin-when-cross-origin"
										},
										{
											"key": "X-Debug-Token",
											"value": "f64d0a"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/f64d0a"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=96"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/html; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "<!DOCTYPE html>\n<html lang=\"en-GB\"\n      itemscope=\"itemscope\"\n      itemtype=\"https://schema.org/WebPage\">\n    <head>\n    </head>\n    <body class=\"is-ctl-checkout is-act-confirmpage\">\n        <header class=\"header-minimal\">\n        </header>\n        <main class=\"content-main\">\n            <div class=\"container\">\n                <div class=\"container-main\">\n                    <div class=\"checkout\">\n                        <div class=\"checkout-container\">\n                            <div class=\"checkout-main\">\n                                 <h1 class=\"confirm-main-header\">Complete order </h1>\n                                <div class=\"d-none hidden-line-items-information\"\n         data-currency=\"EUR\"\n         data-shipping=\"5.5\"\n         data-value=\"1493.35\"\n         data-tax=\"238.44\"\n    >\n                                    <span class=\"hidden-line-item\"\n                      data-id=\"5c5ad48ee35a441d8057ae7433f840a2\"\n                      data-name=\"Main product\"\n                      data-quantity=\"3\"\n                      data-price=\"495.95\">\n                </span>\n                                </div>\n                            </div>\n                            <div class=\"checkout-aside \">\n                                <div class=\"checkout-aside-container\">\n                                    <div class=\"checkout-aside-summary\">\n                                        <h2 class=\"checkout-aside-summary-header\">\n                                                    Summary\n                                                </h2>\n                                        <div class=\"checkout-aside-summary-list-container\">\n                                            <div class=\"checkout-aside-summary-container\">\n                                                <dl class=\"row checkout-aside-summary-list no-gutters \">\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n            Total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n            €1,487.85*\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n                    Shipping costs\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n                    €5.50*\n                </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label checkout-aside-summary-total\">\n            Grand total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value checkout-aside-summary-total\">\n            €1,493.35*        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-net\">\n            Net total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-net\">\n            €1,254.91\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-tax\">\n                    plus 19% VAT\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-tax\">\n                    €238.44\n                </dd>\n                                                </dl>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"checkout-aside-action\">\n                                        <form id=\"confirmOrderForm\"\n              action=\"/checkout/order\"\n              data-form-csrf-handler=\"true\"\n              data-form-preserver=\"true\"\n              data-form-submit-loader=\"true\"\n              method=\"post\">\n                                            <input type=\"hidden\" name=\"_csrf_token\" value=\"965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ\">\n                                            <button id=\"confirmFormSubmit\"\n                        class=\"btn btn-primary btn-block btn-lg\"\n                        form=\"confirmOrderForm\"\n                                            type=\"submit\">\n                    Submit order\n                </button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"footer-minimal\">\n        </footer>\n</body>\n</html>"
								}
							]
						},
						{
							"name": "unset front session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Allow cookie deletion by going to cookies -> Domain Allowlist\r",
											"const jar = pm.cookies.jar();\r",
											"jar.unset(pm.environment.get(\"host\"), 'session-', function (error) {\r",
											"    if (error) {\r",
											"        console.log(error.message)\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}",
									"host": [
										"{{sw_endpoint_frontend}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "A test case checking merge when guest has 3 items, customer has no items in cart before merge"
				},
				{
					"name": "cust (3), guest (1), cust (4)",
					"item": [
						{
							"name": "Log out a customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Save context token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.contextToken).to.be.a('string');\r",
											"    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/account/logout",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"account",
										"logout"
									]
								},
								"description": "Logs out a customer."
							},
							"response": [
								{
									"name": "A successful logout returns a context token for the anonymous user. Use that as your `sw-context-token` header for subsequent requests.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
								},
								{
									"name": "If the user is not logged in, a 403 error is returned.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"logout"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Add items to the cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"has 1 item\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.lineItems).to.be.lengthOf(1);",
											"    pm.expect(jsonData.lineItems[0]).to.haveOwnProperty('quantity').to.eq(1);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"items\": [\n    {\n        \"id\": \"16d5986a83da4a92b6ec1f11a5a0874e\",\n        \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n        \"quantity\": 1,\n        \"type\": \"product\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{sw_store_api}}/checkout/cart/line-item",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"checkout",
										"cart",
										"line-item"
									]
								},
								"description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
							},
							"response": [
								{
									"name": "The updated cart.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/checkout/cart/line-item",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"checkout",
												"cart",
												"line-item"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
								}
							]
						},
						{
							"name": "Log in a customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Save context token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.contextToken).to.be.a('string');\r",
											"    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userEmail}}\",\n  \"password\": \"{{userPass}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{sw_store_api}}/account/login",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Logs in customers given their credentials."
							},
							"response": [
								{
									"name": "A successful login returns a context token which is associated with the logged in user. Use that as your `sw-context-token` header for subsequent requests.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
								},
								{
									"name": "If credentials are incorrect an error is returned",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errors\": [\n    {\n      \"id\": \"elit deserunt anim\",\n      \"links\": {\n        \"non_41c\": \"https://amphPntjNrPIvATAKBdNNmy.sqbwr6Pr17dylNZJ2ie+kQY5w\"\n      },\n      \"status\": \"cupidatat consequat do Ut in\",\n      \"code\": \"minim mollit Lorem ullamco\",\n      \"title\": \"Lorem aute in\",\n      \"detail\": \"Ut non\",\n      \"source\": {\n        \"pointer\": \"magna deserunt\",\n        \"parameter\": \"dolor voluptate velit laboris\"\n      },\n      \"meta\": {\n        \"exercitation2_1\": -7211244\n      }\n    },\n    {\n      \"id\": \"consequat ut\",\n      \"links\": {\n        \"anim_71\": \"http://qGzMxoQxaKpAKg.sjQ-bSkAHUB.lcqBMrKSSo+fOvgiNtoEVllGbQX8uGNDrAUHqIZrL+9?flsk&\"\n      },\n      \"status\": \"veniam et\",\n      \"code\": \"aliqua sed\",\n      \"title\": \"Lorem consequat\",\n      \"detail\": \"ex sit in\",\n      \"source\": {\n        \"pointer\": \"ut in\",\n        \"parameter\": \"occaecat do Lorem ullamco esse\"\n      },\n      \"meta\": {\n        \"laborum_e\": \"consequat veniam tempor\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"adba\": -33550490,\n    \"eu__2\": \"in\"\n  },\n  \"links\": {\n    \"fugiat22\": \"https://dLXCZjVIaxFC.haegj8MMpow,Zl.b\"\n  }\n}"
								}
							]
						},
						{
							"name": "get sg login token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Has token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string')\r",
											"    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
											"    pm.expect(jsonData.expiration).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"sgwebcheckout",
										"login",
										"token"
									]
								},
								"description": "Fetches a list of compressed sitemap files, which are often used by search engines."
							},
							"response": [
								{
									"name": "Return a token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sitemap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sitemap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
								},
								{
									"name": "bad secret error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sw-context-token",
												"value": "{{gen_contextToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"sgwebcheckout",
												"login",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 26 Mar 2022 11:53:37 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "sw-context-token",
											"value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
										},
										{
											"key": "x-frame-options",
											"value": "deny"
										},
										{
											"key": "X-Debug-Token",
											"value": "52f720"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/52f720"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Frontend login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Load the HTML response to $\r",
											"const $ = cheerio.load(pm.response.text());\r",
											"pm.test(\"Check cart page\", function () {\r",
											"    const totals = $('.hidden-line-items-information')\r",
											"    const lineItem = $('.hidden-line-item')\r",
											"    pm.expect(totals).to.be.not.undefined;\r",
											"    pm.expect(lineItem).to.be.not.undefined;\r",
											"    pm.expect(lineItem.length).to.eq(2, 'Should have 1 qty main + 3 qty main product');\r",
											"});\r",
											"\r",
											"pm.test(\"Check we are in cart confirm page\", function () {\r",
											"    const bodyClass = $('.is-ctl-checkout.is-act-confirmpage')\r",
											"    pm.expect(bodyClass).to.be.lengthOf(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}",
									"host": [
										"{{sw_endpoint_frontend}}"
									],
									"path": [
										"sgwebcheckout",
										"login"
									],
									"query": [
										{
											"key": "token",
											"value": "{{gen_login_token}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Frontend login",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}",
											"host": [
												"{{sw_endpoint_frontend}}"
											],
											"path": [
												"sgwebcheckout",
												"login"
											],
											"query": [
												{
													"key": "token",
													"value": "{{gen_login_token}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 28 Mar 2022 10:00:05 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Set-Cookie",
											"value": "session-=1cscrpqsidkphomnfmdn5q96bc; path=/; HttpOnly; SameSite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "sf_redirect=deleted; expires=Sun, 28-Mar-2021 10:00:13 GMT; Max-Age=0; path=/; httponly"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.configure]=4448c72c00d853284d9beff8.N_tQl_9mmSwI7Sut7MLW5zclfAPcrogQR4LLp7EmB7k.ZMkgwswA1ENmmhv1oLKcoEZpUWWKx_4lC-Sjn_xXd-hArjnYhQr8XWS5Yg; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.account.addressbook]=7d9c3b712fc12dfb003baf6f4.-D_AGO0RWiWAIsl4_o1qtD1R2g7VoxfNnM81BVQp3QI.mnWIKqomEHX1QIwKnNQL_E5niGiF1WKfxYl-UXlliVa2fZF93l8tc-R6nA; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.line-item.change-quantity]=d750593c8667d8dc5b93383.1myVXa_07DB4Y4mxFq72EGFBv__Vp0hOQCZeWetfcKU.pwvPCf23qQQ_AsjpQMmZQQ8Q3saC7TsMDmQvEo8zMojlA94Tl8WeeE0R0A; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.line-item.delete]=5ea1c68f30559255108f25959050a929._5Cmz0bvl4bnzKO7F3OzKDpZidHjlVaxD8mJja9snuc.i9SVlneL2_yJhe7ScDLaTXU905aPzxXwWpC8x-Y03deO3cmQA77Uq4-Z7g; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.finish.order]=965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.store-api.proxy]=c.oMJ-AT2lk7aGbw-IzybVfR35lcoHnXUd3-XNeqVA4Fs.__UPQkrPp_XCCl7ggmeRF26mzJp1yztLu4KpDckQpTXIpDU3C87l_-8GZA; path=/; httponly; samesite=lax"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "X-Frame-Options",
											"value": "deny"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "strict-origin-when-cross-origin"
										},
										{
											"key": "X-Debug-Token",
											"value": "f64d0a"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/f64d0a"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=96"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/html; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "<!DOCTYPE html>\n<html lang=\"en-GB\"\n      itemscope=\"itemscope\"\n      itemtype=\"https://schema.org/WebPage\">\n    <head>\n    </head>\n    <body class=\"is-ctl-checkout is-act-confirmpage\">\n        <header class=\"header-minimal\">\n        </header>\n        <main class=\"content-main\">\n            <div class=\"container\">\n                <div class=\"container-main\">\n                    <div class=\"checkout\">\n                        <div class=\"checkout-container\">\n                            <div class=\"checkout-main\">\n                                 <h1 class=\"confirm-main-header\">Complete order </h1>\n                                <div class=\"d-none hidden-line-items-information\"\n         data-currency=\"EUR\"\n         data-shipping=\"5.5\"\n         data-value=\"1493.35\"\n         data-tax=\"238.44\"\n    >\n                                    <span class=\"hidden-line-item\"\n                      data-id=\"5c5ad48ee35a441d8057ae7433f840a2\"\n                      data-name=\"Main product\"\n                      data-quantity=\"3\"\n                      data-price=\"495.95\">\n                </span>\n                                </div>\n                            </div>\n                            <div class=\"checkout-aside \">\n                                <div class=\"checkout-aside-container\">\n                                    <div class=\"checkout-aside-summary\">\n                                        <h2 class=\"checkout-aside-summary-header\">\n                                                    Summary\n                                                </h2>\n                                        <div class=\"checkout-aside-summary-list-container\">\n                                            <div class=\"checkout-aside-summary-container\">\n                                                <dl class=\"row checkout-aside-summary-list no-gutters \">\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n            Total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n            €1,487.85*\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n                    Shipping costs\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n                    €5.50*\n                </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label checkout-aside-summary-total\">\n            Grand total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value checkout-aside-summary-total\">\n            €1,493.35*        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-net\">\n            Net total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-net\">\n            €1,254.91\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-tax\">\n                    plus 19% VAT\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-tax\">\n                    €238.44\n                </dd>\n                                                </dl>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"checkout-aside-action\">\n                                        <form id=\"confirmOrderForm\"\n              action=\"/checkout/order\"\n              data-form-csrf-handler=\"true\"\n              data-form-preserver=\"true\"\n              data-form-submit-loader=\"true\"\n              method=\"post\">\n                                            <input type=\"hidden\" name=\"_csrf_token\" value=\"965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ\">\n                                            <button id=\"confirmFormSubmit\"\n                        class=\"btn btn-primary btn-block btn-lg\"\n                        form=\"confirmOrderForm\"\n                                            type=\"submit\">\n                    Submit order\n                </button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"footer-minimal\">\n        </footer>\n</body>\n</html>"
								}
							]
						},
						{
							"name": "Delete a cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/checkout/cart",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"checkout",
										"cart"
									]
								},
								"description": "This route deletes the cart of the customer."
							},
							"response": [
								{
									"name": "Successfully deleted the cart",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/checkout/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"checkout",
												"cart"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true\n}"
								}
							]
						},
						{
							"name": "unset front session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Allow cookie deletion by going to cookies -> Domain Allowlist\r",
											"const jar = pm.cookies.jar();\r",
											"jar.unset(pm.environment.get(\"host\"), 'session-', function (error) {\r",
											"    if (error) {\r",
											"        console.log(error.message)\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}",
									"host": [
										"{{sw_endpoint_frontend}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Test merge scenario:\n\n*   customer 3 items\n*   logout\n*   guest 1 item\n*   login\n*   customer 3 items + 1 item"
				},
				{
					"name": "Customer token retention",
					"item": [
						{
							"name": "Log in a customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Save context token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.contextToken).to.be.a('string');\r",
											"    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userEmail}}\",\n  \"password\": \"{{userPass}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{sw_store_api}}/account/login",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Logs in customers given their credentials."
							},
							"response": [
								{
									"name": "A successful login returns a context token which is associated with the logged in user. Use that as your `sw-context-token` header for subsequent requests.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
								},
								{
									"name": "If credentials are incorrect an error is returned",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errors\": [\n    {\n      \"id\": \"elit deserunt anim\",\n      \"links\": {\n        \"non_41c\": \"https://amphPntjNrPIvATAKBdNNmy.sqbwr6Pr17dylNZJ2ie+kQY5w\"\n      },\n      \"status\": \"cupidatat consequat do Ut in\",\n      \"code\": \"minim mollit Lorem ullamco\",\n      \"title\": \"Lorem aute in\",\n      \"detail\": \"Ut non\",\n      \"source\": {\n        \"pointer\": \"magna deserunt\",\n        \"parameter\": \"dolor voluptate velit laboris\"\n      },\n      \"meta\": {\n        \"exercitation2_1\": -7211244\n      }\n    },\n    {\n      \"id\": \"consequat ut\",\n      \"links\": {\n        \"anim_71\": \"http://qGzMxoQxaKpAKg.sjQ-bSkAHUB.lcqBMrKSSo+fOvgiNtoEVllGbQX8uGNDrAUHqIZrL+9?flsk&\"\n      },\n      \"status\": \"veniam et\",\n      \"code\": \"aliqua sed\",\n      \"title\": \"Lorem consequat\",\n      \"detail\": \"ex sit in\",\n      \"source\": {\n        \"pointer\": \"ut in\",\n        \"parameter\": \"occaecat do Lorem ullamco esse\"\n      },\n      \"meta\": {\n        \"laborum_e\": \"consequat veniam tempor\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"adba\": -33550490,\n    \"eu__2\": \"in\"\n  },\n  \"links\": {\n    \"fugiat22\": \"https://dLXCZjVIaxFC.haegj8MMpow,Zl.b\"\n  }\n}"
								}
							]
						},
						{
							"name": "get sg login token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Has token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string')\r",
											"    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
											"    pm.expect(jsonData.expiration).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"sgwebcheckout",
										"login",
										"token"
									]
								},
								"description": "Fetches a list of compressed sitemap files, which are often used by search engines."
							},
							"response": [
								{
									"name": "Return a token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sitemap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sitemap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
								},
								{
									"name": "bad secret error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sw-context-token",
												"value": "{{gen_contextToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"sgwebcheckout",
												"login",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 26 Mar 2022 11:53:37 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "sw-context-token",
											"value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
										},
										{
											"key": "x-frame-options",
											"value": "deny"
										},
										{
											"key": "X-Debug-Token",
											"value": "52f720"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/52f720"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Frontend login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Load the HTML response to $\r",
											"const $ = cheerio.load(pm.response.text());\r",
											"pm.test(\"Check we are in cart confirm page\", function () {\r",
											"    const bodyClass = $('.is-ctl-checkout.is-act-cartpage')\r",
											"    pm.expect(bodyClass).to.be.lengthOf(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}&redirectTo=frontend.checkout.cart.page",
									"host": [
										"{{sw_endpoint_frontend}}"
									],
									"path": [
										"sgwebcheckout",
										"login"
									],
									"query": [
										{
											"key": "token",
											"value": "{{gen_login_token}}"
										},
										{
											"key": "redirectTo",
											"value": "frontend.checkout.cart.page"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get sg login token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Has token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string')\r",
											"    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
											"    pm.expect(jsonData.expiration).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"sgwebcheckout",
										"login",
										"token"
									]
								},
								"description": "Fetches a list of compressed sitemap files, which are often used by search engines."
							},
							"response": [
								{
									"name": "Return a token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sitemap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sitemap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
								},
								{
									"name": "bad secret error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sw-context-token",
												"value": "{{gen_contextToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"sgwebcheckout",
												"login",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 26 Mar 2022 11:53:37 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "sw-context-token",
											"value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
										},
										{
											"key": "x-frame-options",
											"value": "deny"
										},
										{
											"key": "X-Debug-Token",
											"value": "52f720"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/52f720"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Frontend login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const $ = cheerio.load(pm.response.text());\r",
											"pm.test(\"Check we are in cart confirm page\", function () {\r",
											"    const bodyClass = $('.is-ctl-accountprofile.is-act-index')\r",
											"    pm.expect(bodyClass).to.be.lengthOf(1);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}&redirectTo=frontend.account.home.page",
									"host": [
										"{{sw_endpoint_frontend}}"
									],
									"path": [
										"sgwebcheckout",
										"login"
									],
									"query": [
										{
											"key": "token",
											"value": "{{gen_login_token}}"
										},
										{
											"key": "redirectTo",
											"value": "frontend.account.home.page"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Fetch the current context",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Customer token did not change\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.customer).to.be.not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/context",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"context"
									]
								},
								"description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
							},
							"response": [
								{
									"name": "Returns the current context.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/context",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"context"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
								}
							]
						}
					],
					"description": "Checks that the customer token gets retained when trying to log them in. This is the case when they are already logged into the session. Attempting to log them back in would result in the context token being changed. Which creates a contextToken de-sync with the App."
				},
				{
					"name": "Double login",
					"item": [
						{
							"name": "Log out a customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/account/logout",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"account",
										"logout"
									]
								},
								"description": "Logs out a customer."
							},
							"response": [
								{
									"name": "A successful logout returns a context token for the anonymous user. Use that as your `sw-context-token` header for subsequent requests.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
								},
								{
									"name": "If the user is not logged in, a 403 error is returned.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/account/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"logout"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Fetch the current context",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Save context token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string');\r",
											"    pm.environment.set(\"gen_contextToken\", jsonData.token);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/context",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"context"
									]
								},
								"description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
							},
							"response": [
								{
									"name": "Returns the current context.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/context",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"context"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
								}
							]
						},
						{
							"name": "Log in a customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Save context token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.contextToken).to.be.a('string');\r",
											"    pm.environment.set(\"gen_contextToken\", jsonData.contextToken);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"{{userEmail}}\",\n  \"password\": \"{{userPass}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{sw_store_api}}/account/login",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"account",
										"login"
									]
								},
								"description": "Logs in customers given their credentials."
							},
							"response": [
								{
									"name": "A successful login returns a context token which is associated with the logged in user. Use that as your `sw-context-token` header for subsequent requests.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
								},
								{
									"name": "If credentials are incorrect an error is returned",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"aliquip\",\n  \"password\": \"aliqua mollit\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/account/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"account",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"errors\": [\n    {\n      \"id\": \"elit deserunt anim\",\n      \"links\": {\n        \"non_41c\": \"https://amphPntjNrPIvATAKBdNNmy.sqbwr6Pr17dylNZJ2ie+kQY5w\"\n      },\n      \"status\": \"cupidatat consequat do Ut in\",\n      \"code\": \"minim mollit Lorem ullamco\",\n      \"title\": \"Lorem aute in\",\n      \"detail\": \"Ut non\",\n      \"source\": {\n        \"pointer\": \"magna deserunt\",\n        \"parameter\": \"dolor voluptate velit laboris\"\n      },\n      \"meta\": {\n        \"exercitation2_1\": -7211244\n      }\n    },\n    {\n      \"id\": \"consequat ut\",\n      \"links\": {\n        \"anim_71\": \"http://qGzMxoQxaKpAKg.sjQ-bSkAHUB.lcqBMrKSSo+fOvgiNtoEVllGbQX8uGNDrAUHqIZrL+9?flsk&\"\n      },\n      \"status\": \"veniam et\",\n      \"code\": \"aliqua sed\",\n      \"title\": \"Lorem consequat\",\n      \"detail\": \"ex sit in\",\n      \"source\": {\n        \"pointer\": \"ut in\",\n        \"parameter\": \"occaecat do Lorem ullamco esse\"\n      },\n      \"meta\": {\n        \"laborum_e\": \"consequat veniam tempor\"\n      }\n    }\n  ],\n  \"meta\": {\n    \"adba\": -33550490,\n    \"eu__2\": \"in\"\n  },\n  \"links\": {\n    \"fugiat22\": \"https://dLXCZjVIaxFC.haegj8MMpow,Zl.b\"\n  }\n}"
								}
							]
						},
						{
							"name": "SW: customer info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/account/customer",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"account",
										"customer"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/checkout/cart",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"checkout",
										"cart"
									]
								},
								"description": "This route deletes the cart of the customer."
							},
							"response": [
								{
									"name": "Successfully deleted the cart",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/checkout/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"checkout",
												"cart"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true\n}"
								}
							]
						},
						{
							"name": "Add items to the cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \"items\": [\n    {\n      \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n      \"quantity\": 3,\n      \"type\": \"product\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{sw_store_api}}/checkout/cart/line-item",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"checkout",
										"cart",
										"line-item"
									]
								},
								"description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
							},
							"response": [
								{
									"name": "The updated cart.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/checkout/cart/line-item",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"checkout",
												"cart",
												"line-item"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
								}
							]
						},
						{
							"name": "get sg login token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Has token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string')\r",
											"    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
											"    pm.expect(jsonData.expiration).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"sgwebcheckout",
										"login",
										"token"
									]
								},
								"description": "Fetches a list of compressed sitemap files, which are often used by search engines."
							},
							"response": [
								{
									"name": "Return a token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sitemap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sitemap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
								},
								{
									"name": "bad secret error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sw-context-token",
												"value": "{{gen_contextToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"sgwebcheckout",
												"login",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 26 Mar 2022 11:53:37 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "sw-context-token",
											"value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
										},
										{
											"key": "x-frame-options",
											"value": "deny"
										},
										{
											"key": "X-Debug-Token",
											"value": "52f720"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/52f720"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Frontend login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Load the HTML response to $\r",
											"const $ = cheerio.load(pm.response.text());\r",
											"pm.test(\"Check cart page\", function () {\r",
											"    const totals = $('.hidden-line-items-information')\r",
											"    const lineItem = $('.hidden-line-item')\r",
											"    pm.expect(totals).to.be.not.undefined;\r",
											"    pm.expect(lineItem).to.be.not.undefined;\r",
											"    pm.expect(lineItem.attr('data-quantity')).to.eq('3')\r",
											"});\r",
											"\r",
											"pm.test(\"Check we are in cart confirm page\", function () {\r",
											"    const bodyClass = $('.is-ctl-checkout.is-act-confirmpage')\r",
											"    pm.expect(bodyClass).to.be.lengthOf(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}",
									"host": [
										"{{sw_endpoint_frontend}}"
									],
									"path": [
										"sgwebcheckout",
										"login"
									],
									"query": [
										{
											"key": "token",
											"value": "{{gen_login_token}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Frontend login",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}",
											"host": [
												"{{sw_endpoint_frontend}}"
											],
											"path": [
												"sgwebcheckout",
												"login"
											],
											"query": [
												{
													"key": "token",
													"value": "{{gen_login_token}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 28 Mar 2022 10:00:05 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Set-Cookie",
											"value": "session-=1cscrpqsidkphomnfmdn5q96bc; path=/; HttpOnly; SameSite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "sf_redirect=deleted; expires=Sun, 28-Mar-2021 10:00:13 GMT; Max-Age=0; path=/; httponly"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.configure]=4448c72c00d853284d9beff8.N_tQl_9mmSwI7Sut7MLW5zclfAPcrogQR4LLp7EmB7k.ZMkgwswA1ENmmhv1oLKcoEZpUWWKx_4lC-Sjn_xXd-hArjnYhQr8XWS5Yg; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.account.addressbook]=7d9c3b712fc12dfb003baf6f4.-D_AGO0RWiWAIsl4_o1qtD1R2g7VoxfNnM81BVQp3QI.mnWIKqomEHX1QIwKnNQL_E5niGiF1WKfxYl-UXlliVa2fZF93l8tc-R6nA; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.line-item.change-quantity]=d750593c8667d8dc5b93383.1myVXa_07DB4Y4mxFq72EGFBv__Vp0hOQCZeWetfcKU.pwvPCf23qQQ_AsjpQMmZQQ8Q3saC7TsMDmQvEo8zMojlA94Tl8WeeE0R0A; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.line-item.delete]=5ea1c68f30559255108f25959050a929._5Cmz0bvl4bnzKO7F3OzKDpZidHjlVaxD8mJja9snuc.i9SVlneL2_yJhe7ScDLaTXU905aPzxXwWpC8x-Y03deO3cmQA77Uq4-Z7g; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.finish.order]=965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.store-api.proxy]=c.oMJ-AT2lk7aGbw-IzybVfR35lcoHnXUd3-XNeqVA4Fs.__UPQkrPp_XCCl7ggmeRF26mzJp1yztLu4KpDckQpTXIpDU3C87l_-8GZA; path=/; httponly; samesite=lax"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "X-Frame-Options",
											"value": "deny"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "strict-origin-when-cross-origin"
										},
										{
											"key": "X-Debug-Token",
											"value": "f64d0a"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/f64d0a"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=96"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/html; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "<!DOCTYPE html>\n<html lang=\"en-GB\"\n      itemscope=\"itemscope\"\n      itemtype=\"https://schema.org/WebPage\">\n    <head>\n    </head>\n    <body class=\"is-ctl-checkout is-act-confirmpage\">\n        <header class=\"header-minimal\">\n        </header>\n        <main class=\"content-main\">\n            <div class=\"container\">\n                <div class=\"container-main\">\n                    <div class=\"checkout\">\n                        <div class=\"checkout-container\">\n                            <div class=\"checkout-main\">\n                                 <h1 class=\"confirm-main-header\">Complete order </h1>\n                                <div class=\"d-none hidden-line-items-information\"\n         data-currency=\"EUR\"\n         data-shipping=\"5.5\"\n         data-value=\"1493.35\"\n         data-tax=\"238.44\"\n    >\n                                    <span class=\"hidden-line-item\"\n                      data-id=\"5c5ad48ee35a441d8057ae7433f840a2\"\n                      data-name=\"Main product\"\n                      data-quantity=\"3\"\n                      data-price=\"495.95\">\n                </span>\n                                </div>\n                            </div>\n                            <div class=\"checkout-aside \">\n                                <div class=\"checkout-aside-container\">\n                                    <div class=\"checkout-aside-summary\">\n                                        <h2 class=\"checkout-aside-summary-header\">\n                                                    Summary\n                                                </h2>\n                                        <div class=\"checkout-aside-summary-list-container\">\n                                            <div class=\"checkout-aside-summary-container\">\n                                                <dl class=\"row checkout-aside-summary-list no-gutters \">\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n            Total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n            €1,487.85*\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n                    Shipping costs\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n                    €5.50*\n                </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label checkout-aside-summary-total\">\n            Grand total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value checkout-aside-summary-total\">\n            €1,493.35*        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-net\">\n            Net total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-net\">\n            €1,254.91\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-tax\">\n                    plus 19% VAT\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-tax\">\n                    €238.44\n                </dd>\n                                                </dl>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"checkout-aside-action\">\n                                        <form id=\"confirmOrderForm\"\n              action=\"/checkout/order\"\n              data-form-csrf-handler=\"true\"\n              data-form-preserver=\"true\"\n              data-form-submit-loader=\"true\"\n              method=\"post\">\n                                            <input type=\"hidden\" name=\"_csrf_token\" value=\"965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ\">\n                                            <button id=\"confirmFormSubmit\"\n                        class=\"btn btn-primary btn-block btn-lg\"\n                        form=\"confirmOrderForm\"\n                                            type=\"submit\">\n                    Submit order\n                </button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"footer-minimal\">\n        </footer>\n</body>\n</html>"
								}
							]
						},
						{
							"name": "unset front session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Allow cookie deletion by going to cookies -> Domain Allowlist\r",
											"const jar = pm.cookies.jar();\r",
											"jar.unset(pm.environment.get(\"host\"), 'session-', function (error) {\r",
											"    if (error) {\r",
											"        console.log(error.message)\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}",
									"host": [
										"{{sw_endpoint_frontend}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get sg login token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Has token\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string')\r",
											"    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
											"    pm.expect(jsonData.expiration).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									},
									{
										"key": "shopgate-check",
										"value": "1",
										"type": "text",
										"description": "required to extend expired sessions"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"sgwebcheckout",
										"login",
										"token"
									]
								},
								"description": "Fetches a list of compressed sitemap files, which are often used by search engines."
							},
							"response": [
								{
									"name": "Return a token",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/sitemap",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"sitemap"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
								},
								{
									"name": "bad secret error",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "sw-context-token",
												"value": "{{gen_contextToken}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
											"host": [
												"{{sw_store_api}}"
											],
											"path": [
												"sgwebcheckout",
												"login",
												"token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Date",
											"value": "Sat, 26 Mar 2022 11:53:37 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "sw-context-token",
											"value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
										},
										{
											"key": "x-frame-options",
											"value": "deny"
										},
										{
											"key": "X-Debug-Token",
											"value": "52f720"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/52f720"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Frontend login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Load the HTML response to $\r",
											"const $ = cheerio.load(pm.response.text());\r",
											"pm.test(\"Check cart page\", function () {\r",
											"    const totals = $('.hidden-line-items-information')\r",
											"    const lineItem = $('.hidden-line-item')\r",
											"    pm.expect(totals).to.be.not.undefined;\r",
											"    pm.expect(lineItem).to.be.not.undefined;\r",
											"    pm.expect(lineItem.attr('data-quantity')).to.eq('3')\r",
											"});\r",
											"\r",
											"pm.test(\"Check we are in cart confirm page\", function () {\r",
											"    const bodyClass = $('.is-ctl-checkout.is-act-confirmpage')\r",
											"    pm.expect(bodyClass).to.be.lengthOf(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}",
									"host": [
										"{{sw_endpoint_frontend}}"
									],
									"path": [
										"sgwebcheckout",
										"login"
									],
									"query": [
										{
											"key": "token",
											"value": "{{gen_login_token}}"
										}
									]
								}
							},
							"response": [
								{
									"name": "Frontend login",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}",
											"host": [
												"{{sw_endpoint_frontend}}"
											],
											"path": [
												"sgwebcheckout",
												"login"
											],
											"query": [
												{
													"key": "token",
													"value": "{{gen_login_token}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "html",
									"header": [
										{
											"key": "Date",
											"value": "Mon, 28 Mar 2022 10:00:05 GMT"
										},
										{
											"key": "Server",
											"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
										},
										{
											"key": "X-Powered-By",
											"value": "PHP/7.4.12"
										},
										{
											"key": "Set-Cookie",
											"value": "session-=1cscrpqsidkphomnfmdn5q96bc; path=/; HttpOnly; SameSite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "sf_redirect=deleted; expires=Sun, 28-Mar-2021 10:00:13 GMT; Max-Age=0; path=/; httponly"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.configure]=4448c72c00d853284d9beff8.N_tQl_9mmSwI7Sut7MLW5zclfAPcrogQR4LLp7EmB7k.ZMkgwswA1ENmmhv1oLKcoEZpUWWKx_4lC-Sjn_xXd-hArjnYhQr8XWS5Yg; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.account.addressbook]=7d9c3b712fc12dfb003baf6f4.-D_AGO0RWiWAIsl4_o1qtD1R2g7VoxfNnM81BVQp3QI.mnWIKqomEHX1QIwKnNQL_E5niGiF1WKfxYl-UXlliVa2fZF93l8tc-R6nA; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.line-item.change-quantity]=d750593c8667d8dc5b93383.1myVXa_07DB4Y4mxFq72EGFBv__Vp0hOQCZeWetfcKU.pwvPCf23qQQ_AsjpQMmZQQ8Q3saC7TsMDmQvEo8zMojlA94Tl8WeeE0R0A; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.line-item.delete]=5ea1c68f30559255108f25959050a929._5Cmz0bvl4bnzKO7F3OzKDpZidHjlVaxD8mJja9snuc.i9SVlneL2_yJhe7ScDLaTXU905aPzxXwWpC8x-Y03deO3cmQA77Uq4-Z7g; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.checkout.finish.order]=965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ; path=/; httponly; samesite=lax"
										},
										{
											"key": "Set-Cookie",
											"value": "csrf[frontend.store-api.proxy]=c.oMJ-AT2lk7aGbw-IzybVfR35lcoHnXUd3-XNeqVA4Fs.__UPQkrPp_XCCl7ggmeRF26mzJp1yztLu4KpDckQpTXIpDU3C87l_-8GZA; path=/; httponly; samesite=lax"
										},
										{
											"key": "Cache-Control",
											"value": "no-cache, private"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "GET,POST,PUT,PATCH,DELETE"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
										},
										{
											"key": "X-Frame-Options",
											"value": "deny"
										},
										{
											"key": "X-Content-Type-Options",
											"value": "nosniff"
										},
										{
											"key": "Referrer-Policy",
											"value": "strict-origin-when-cross-origin"
										},
										{
											"key": "X-Debug-Token",
											"value": "f64d0a"
										},
										{
											"key": "X-Debug-Token-Link",
											"value": "http://localhost:7777/_profiler/f64d0a"
										},
										{
											"key": "X-Robots-Tag",
											"value": "noindex"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5, max=96"
										},
										{
											"key": "Connection",
											"value": "Keep-Alive"
										},
										{
											"key": "Transfer-Encoding",
											"value": "chunked"
										},
										{
											"key": "Content-Type",
											"value": "text/html; charset=UTF-8"
										}
									],
									"cookie": [],
									"body": "<!DOCTYPE html>\n<html lang=\"en-GB\"\n      itemscope=\"itemscope\"\n      itemtype=\"https://schema.org/WebPage\">\n    <head>\n    </head>\n    <body class=\"is-ctl-checkout is-act-confirmpage\">\n        <header class=\"header-minimal\">\n        </header>\n        <main class=\"content-main\">\n            <div class=\"container\">\n                <div class=\"container-main\">\n                    <div class=\"checkout\">\n                        <div class=\"checkout-container\">\n                            <div class=\"checkout-main\">\n                                 <h1 class=\"confirm-main-header\">Complete order </h1>\n                                <div class=\"d-none hidden-line-items-information\"\n         data-currency=\"EUR\"\n         data-shipping=\"5.5\"\n         data-value=\"1493.35\"\n         data-tax=\"238.44\"\n    >\n                                    <span class=\"hidden-line-item\"\n                      data-id=\"5c5ad48ee35a441d8057ae7433f840a2\"\n                      data-name=\"Main product\"\n                      data-quantity=\"3\"\n                      data-price=\"495.95\">\n                </span>\n                                </div>\n                            </div>\n                            <div class=\"checkout-aside \">\n                                <div class=\"checkout-aside-container\">\n                                    <div class=\"checkout-aside-summary\">\n                                        <h2 class=\"checkout-aside-summary-header\">\n                                                    Summary\n                                                </h2>\n                                        <div class=\"checkout-aside-summary-list-container\">\n                                            <div class=\"checkout-aside-summary-container\">\n                                                <dl class=\"row checkout-aside-summary-list no-gutters \">\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n            Total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n            €1,487.85*\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label\">\n                    Shipping costs\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value\">\n                    €5.50*\n                </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label checkout-aside-summary-total\">\n            Grand total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value checkout-aside-summary-total\">\n            €1,493.35*        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-net\">\n            Net total\n        </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-net\">\n            €1,254.91\n        </dd>\n                                                    <dt class=\"col-7 checkout-aside-summary-label summary-tax\">\n                    plus 19% VAT\n                </dt>\n                                                    <dd class=\"col-5 checkout-aside-summary-value summary-tax\">\n                    €238.44\n                </dd>\n                                                </dl>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"checkout-aside-action\">\n                                        <form id=\"confirmOrderForm\"\n              action=\"/checkout/order\"\n              data-form-csrf-handler=\"true\"\n              data-form-preserver=\"true\"\n              data-form-submit-loader=\"true\"\n              method=\"post\">\n                                            <input type=\"hidden\" name=\"_csrf_token\" value=\"965.YpHY3rFSoHnWYiHlt25UP_e-MkKxcTyePWxI-LC3Nfk.Mua9jsIx0DuOOn6J1RcfRbLpAXaEElrGECAPgtHQVsEE54nm4SjCTrhbEQ\">\n                                            <button id=\"confirmFormSubmit\"\n                        class=\"btn btn-primary btn-block btn-lg\"\n                        form=\"confirmOrderForm\"\n                                            type=\"submit\">\n                    Submit order\n                </button>\n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </main>\n        <footer class=\"footer-minimal\">\n        </footer>\n</body>\n</html>"
								}
							]
						},
						{
							"name": "Delete a cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "value",
											"value": "{{gen_accessKey}}",
											"type": "string"
										},
										{
											"key": "key",
											"value": "sw-access-key",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/checkout/cart",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"checkout",
										"cart"
									]
								},
								"description": "This route deletes the cart of the customer."
							},
							"response": [
								{
									"name": "Successfully deleted the cart",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: apikey",
												"key": "sw-access-key",
												"value": "{{apiKey}}"
											},
											{
												"description": "(Required) Content type of the request",
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"description": "(Required) Accepted response content types",
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/checkout/cart",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"checkout",
												"cart"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": true\n}"
								}
							]
						},
						{
							"name": "unset front session",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Allow cookie deletion by going to cookies -> Domain Allowlist\r",
											"const jar = pm.cookies.jar();\r",
											"jar.unset(pm.environment.get(\"host\"), 'session-', function (error) {\r",
											"    if (error) {\r",
											"        console.log(error.message)\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{sw_endpoint_frontend}}",
									"host": [
										"{{sw_endpoint_frontend}}"
									]
								}
							},
							"response": []
						}
					],
					"description": "Tries logging in the twice in a row. We had issues with a setting in SW6 for SW6M-61 ticket. This checks the setting."
				}
			]
		},
		{
			"name": "logged out",
			"item": [
				{
					"name": "Log out a customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "sw-context-token",
								"value": "{{gen_contextToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{sw_store_api}}/account/logout",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"account",
								"logout"
							]
						},
						"description": "Logs out a customer."
					},
					"response": [
						{
							"name": "A successful logout returns a context token for the anonymous user. Use that as your `sw-context-token` header for subsequent requests.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
						},
						{
							"name": "If the user is not logged in, a 403 error is returned.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"logout"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Fetch the current context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save context token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.be.a('string');\r",
									"    pm.environment.set(\"gen_contextToken\", jsonData.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{sw_store_api}}/context",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"context"
							]
						},
						"description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
					},
					"response": [
						{
							"name": "Returns the current context.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/context",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"context"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Add items to the cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"has 1 item\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lineItems).to.be.lengthOf(1);",
									"    pm.expect(jsonData.lineItems[0]).to.haveOwnProperty('quantity').to.eq(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "sw-context-token",
								"value": "{{gen_contextToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"items\": [\n    {\n        \"id\": \"16d5986a83da4a92b6ec1f11a5a0874e\",\n        \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n        \"quantity\": 2,\n        \"type\": \"product\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_store_api}}/checkout/cart/line-item",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"checkout",
								"cart",
								"line-item"
							]
						},
						"description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
					},
					"response": [
						{
							"name": "The updated cart.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/checkout/cart/line-item",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"checkout",
										"cart",
										"line-item"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
						}
					]
				},
				{
					"name": "get sg login token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Has token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.be.a('string')\r",
									"    pm.environment.set(\"gen_login_token\", jsonData.token);\r",
									"    pm.expect(jsonData.expiration).to.be.a('number');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "sw-context-token",
								"value": "{{gen_contextToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"sgwebcheckout",
								"login",
								"token"
							]
						},
						"description": "Fetches a list of compressed sitemap files, which are often used by search engines."
					},
					"response": [
						{
							"name": "Return a token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/sitemap",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"sitemap"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiZTBiYzI5MGYzM2E3NGRmOWI5NDRmZjBiMjI5ZjAzMWIiLCJleHAiOjE2NDgyOTU3NzcsImlzcyI6ImxvY2FsaG9zdCIsImlhdCI6MTY0ODI5NTcxN30.5M6nuv-PCELqWdiS-VKcmllNPlVtR4qpn7_3jS4Gu_8\",\n    \"expiration\": 1648295777\n}\n"
						},
						{
							"name": "bad secret error",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "sw-context-token",
										"value": "{{gen_contextToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/sgwebcheckout/login/token",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"sgwebcheckout",
										"login",
										"token"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Sat, 26 Mar 2022 11:53:37 GMT"
								},
								{
									"key": "Server",
									"value": "Apache/2.4.46 (Unix) OpenSSL/1.0.2u PHP/7.4.12 mod_wsgi/3.5 Python/2.7.13 mod_fastcgi/mod_fastcgi-SNAP-0910052141 mod_perl/2.0.11 Perl/v5.30.1"
								},
								{
									"key": "X-Powered-By",
									"value": "PHP/7.4.12"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, private"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "GET,POST,PUT,PATCH,DELETE"
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Content-Type,Authorization,sw-context-token,sw-access-key,sw-language-id,sw-version-id,sw-inheritance,fail-on-error,indexing-behavior,single-operation,sw-include-seo-urls"
								},
								{
									"key": "sw-context-token",
									"value": "0XC8rfRCsrjLNEpRrsaxoe28OvRLLNGd"
								},
								{
									"key": "x-frame-options",
									"value": "deny"
								},
								{
									"key": "X-Debug-Token",
									"value": "52f720"
								},
								{
									"key": "X-Debug-Token-Link",
									"value": "http://localhost:7777/_profiler/52f720"
								},
								{
									"key": "X-Robots-Tag",
									"value": "noindex"
								},
								{
									"key": "Connection",
									"value": "close"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"code\": \"9\",\n            \"status\": \"500\",\n            \"title\": \"Internal Server Error\",\n            \"detail\": \"Invalid secret.\",\n            \"meta\": {\n                \"trace\": [],\n                \"file\": \"vendor/rbdwllr/reallysimplejwt/src/Build.php\",\n                \"line\": 121\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Frontend login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $\r",
									"const $ = cheerio.load(pm.response.text());\r",
									"pm.test(\"Check cart page\", function () {\r",
									"    const totals = $('.hidden-line-items-information')\r",
									"    const lineItem = $('.hidden-line-item')\r",
									"    pm.expect(totals).to.be.not.undefined;\r",
									"    pm.expect(lineItem).to.be.not.undefined;\r",
									"    pm.expect(lineItem.attr('data-quantity')).to.eq('2')\r",
									"});\r",
									"\r",
									"pm.test(\"Check we redirected to logged out cart page\", function () {\r",
									"    const bodyClass = $('.is-ctl-checkout.is-act-cartpage')\r",
									"    pm.expect(bodyClass).to.be.lengthOf(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token={{gen_login_token}}&redirectTo=frontend.checkout.cart.page",
							"host": [
								"{{sw_endpoint_frontend}}"
							],
							"path": [
								"sgwebcheckout",
								"login"
							],
							"query": [
								{
									"key": "token",
									"value": "{{gen_login_token}}"
								},
								{
									"key": "redirectTo",
									"value": "frontend.checkout.cart.page"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "unset front session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Allow cookie deletion by going to cookies -> Domain Allowlist\r",
									"const jar = pm.cookies.jar();\r",
									"jar.unset(pm.environment.get(\"host\"), 'session-', function (error) {\r",
									"    if (error) {\r",
									"        console.log(error.message)\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{sw_endpoint_frontend}}",
							"host": [
								"{{sw_endpoint_frontend}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invalid token",
			"item": [
				{
					"name": "Log out a customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "sw-context-token",
								"value": "{{gen_contextToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{sw_store_api}}/account/logout",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"account",
								"logout"
							]
						},
						"description": "Logs out a customer."
					},
					"response": [
						{
							"name": "A successful logout returns a context token for the anonymous user. Use that as your `sw-context-token` header for subsequent requests.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"contextToken\": \"officia sit minim sunt\"\n}"
						},
						{
							"name": "If the user is not logged in, a 403 error is returned.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/account/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"account",
										"logout"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "Fetch the current context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Save context token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token).to.be.a('string');\r",
									"    pm.environment.set(\"gen_contextToken\", jsonData.token);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{sw_store_api}}/context",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"context"
							]
						},
						"description": "Fetches the current context. This includes for example the `customerGroup`, `currency`, `taxRules` and many more."
					},
					"response": [
						{
							"name": "Returns the current context.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{sw_store_api}}/context",
									"host": [
										"{{sw_store_api}}"
									],
									"path": [
										"context"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"apiAlias\": \"ea\",\n  \"token\": \"dolor est eu\",\n  \"currentCustomerGroup\": {\n    \"name\": \"enim do\",\n    \"displayGross\": true\n  },\n  \"fallbackCustomerGroup\": {\n    \"name\": \"consectetur Ut aliquip\",\n    \"displayGross\": true\n  },\n  \"currency\": {\n    \"isoCode\": \"officia commodo\",\n    \"factor\": -68852605,\n    \"symbol\": \"ut esse qui\",\n    \"shortName\": \"eiusmod magna anim\",\n    \"name\": \"eu in ut dolore\",\n    \"position\": 59441736,\n    \"decimalPrecision\": 83675231,\n    \"isSystemDefault\": false\n  },\n  \"salesChannel\": {\n    \"typeId\": \"dolore ex ut aliquip\",\n    \"languageId\": \"id occaecat ut ut\",\n    \"currencyId\": \"nostrud\",\n    \"paymentMethodId\": \"occaecat\",\n    \"shippingMethodId\": \"qui ad anim culpa\",\n    \"countryId\": \"sint aliquip irure\",\n    \"navigationCategoryId\": \"ullamco ea id ipsum\",\n    \"navigationCategoryDepth\": 44879814,\n    \"footerCategoryId\": \"nisi occaecat dolor pariatur\",\n    \"serviceCategoryId\": \"consequat mollit ad ea officia\",\n    \"name\": \"voluptate tempor veniam dolore\",\n    \"shortName\": \"in veniam deserunt\",\n    \"accessKey\": \"ea c\",\n    \"active\": false,\n    \"maintenance\": true,\n    \"maintenanceIpWhitelist\": \"occaecat ipsum et\",\n    \"mailHeaderFooterId\": \"dolore nulla adipisicing veniam conse\",\n    \"customerGroupId\": \"tempor anim dolor elit nulla\",\n    \"hreflangActive\": false,\n    \"hreflangDefaultDomainId\": \"non laborum\",\n    \"analyticsId\": \"enim eu sint fugiat\"\n  },\n  \"taxRules\": [\n    {\n      \"taxRate\": 90957299.5992665,\n      \"name\": \"Lorem ad dolore quis\"\n    },\n    {\n      \"taxRate\": -9625105.030287132,\n      \"name\": \"qui laboris exercitation occaecat anim\"\n    }\n  ],\n  \"customer\": {\n    \"groupId\": \"dolore esse\",\n    \"defaultPaymentMethodId\": \"in ex labore \",\n    \"salesChannelId\": \"ipsum Lorem nisi fugiat sint\",\n    \"languageId\": \"in\",\n    \"lastPaymentMethodId\": \"reprehenderit in ut\",\n    \"defaultBillingAddressId\": \"ullamco\",\n    \"defaultShippingAddressId\": \"id laboris sed\",\n    \"customerNumber\": \"dolor sint\",\n    \"salutationId\": \"culpa id\",\n    \"firstName\": \"aliquip ut\",\n    \"lastName\": \"exercitation dolore\",\n    \"company\": \"Duis pariatur\",\n    \"password\": \"irure in enim\",\n    \"email\": \"laborum ex voluptate ea\",\n    \"title\": \"eu consectetur Ut\",\n    \"affiliateCode\": \"do\",\n    \"campaignCode\": \"dolor nisi\",\n    \"active\": true,\n    \"doubleOptInRegistration\": false,\n    \"doubleOptInEmailSentDate\": \"1996-11-22T14:22:18.999Z\",\n    \"doubleOptInConfirmDate\": \"1954-05-02T03:56:41.029Z\",\n    \"hash\": \"tempor Duis d\",\n    \"guest\": false,\n    \"firstLogin\": \"1956-02-07T02:39:37.055Z\",\n    \"lastLogin\": \"1960-04-15T00:24:01.660Z\",\n    \"newsletter\": true,\n    \"birthday\": \"1991-09-14T18:35:11.263Z\",\n    \"lastOrderDate\": \"1995-11-03T21:41:52.078Z\",\n    \"orderCount\": 43918618,\n    \"legacyEncoder\": \"nulla sunt aliqua veniam\",\n    \"legacyPassword\": \"elit deserunt in culpa\",\n    \"autoIncrement\": -46218338,\n    \"remoteAddress\": \"amet magna ullamco\"\n  },\n  \"paymentMethod\": {\n    \"pluginId\": \"qui \",\n    \"handlerIdentifier\": \"Duis consequat\",\n    \"name\": \"laboris proident aliqua mollit\",\n    \"description\": \"nulla\",\n    \"position\": 69921545,\n    \"active\": true,\n    \"availabilityRuleId\": \"id\",\n    \"mediaId\": \"adipisicing do esse consectetur\",\n    \"formattedHandlerIdentifier\": \"occaecat tempor\"\n  },\n  \"shippingMethod\": {\n    \"name\": \"cillum\",\n    \"active\": true,\n    \"description\": \"consequat ut\",\n    \"trackingUrl\": \"est quis amet\",\n    \"deliveryTimeId\": \"fugiat ex sed sint\",\n    \"availabilityRuleId\": \"ad quis\",\n    \"mediaId\": \"elit Lorem quis et dolore\"\n  },\n  \"context\": {\n    \"versionId\": \"eiusmod irure\",\n    \"currencyId\": \"deserunt commodo\",\n    \"currencyFactor\": -19862713,\n    \"currencyPrecision\": -78420921,\n    \"scope\": \"occaecat\",\n    \"source\": \"ut nulla eu mollit\",\n    \"taxState\": \"dolor consectetur id sint aliqua\",\n    \"useCache\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Frontend login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Load the HTML response to $\r",
									"const $ = cheerio.load(pm.response.text());\r",
									"pm.test(\"Check we are on spinner page when token is bad\", function () {\r",
									"    const bodyClass = $('.is-ctl-sgwebcheckout.is-act-login');\r",
									"    pm.expect(bodyClass).to.be.lengthOf(1);\r",
									"    const spinner = $('.sg-spinner');\r",
									"    pm.expect(spinner).to.be.lengthOf(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{sw_endpoint_frontend}}/sgwebcheckout/login?token=111",
							"host": [
								"{{sw_endpoint_frontend}}"
							],
							"path": [
								"sgwebcheckout",
								"login"
							],
							"query": [
								{
									"key": "token",
									"value": "111"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order -> Agent",
			"item": [
				{
					"name": "SWS: login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"get customer context token\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.contextToken).to.be.a('string');\r",
									"    pm.environment.set(\"gen_customer_t2_contextToken\", jsonData.contextToken);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "sw-context-token",
								"value": "test-context",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{userEmail}}\",\n  \"password\": \"{{userPass}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_store_api}}/account/login",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "SWS: Add items to the cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "apikey",
							"apikey": [
								{
									"key": "value",
									"value": "{{gen_accessKey}}",
									"type": "string"
								},
								{
									"key": "key",
									"value": "sw-access-key",
									"type": "string"
								},
								{
									"key": "in",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"description": "(Required) Content type of the request",
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"description": "(Required) Accepted response content types",
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "sw-context-token",
								"value": "{{gen_customer_t2_contextToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"items\": [\n    {\n      \"referencedId\": \"2a88d9b59d474c7e869d8071649be43c\",\n      \"quantity\": 1,\n      \"type\": \"product\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_store_api}}/checkout/cart/line-item",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"checkout",
								"cart",
								"line-item"
							]
						},
						"description": "This route adds items to the cart. An item can be a product or promotion for example. They are referenced by the `referencedId`-parameter.\n\nExample: [Working with the cart - Guide](https://developer.shopware.com/docs/guides/integrations-api/store-api-guide/work-with-the-cart#adding-new-items-to-the-cart)"
					},
					"response": [
						{
							"name": "The updated cart.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "{{apiKey}}"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"apiAlias\": \"ea officia magna sit\",\n  \"items\": [\n    {\n      \"id\": \"anim\",\n      \"referencedId\": \"ad consectetur consequat est\",\n      \"label\": \"ut\",\n      \"quantity\": 64803686,\n      \"type\": \"in deserunt Duis\",\n      \"good\": true,\n      \"description\": \"laboris deserunt eu aliquip\",\n      \"removable\": false,\n      \"stackable\": true,\n      \"modified\": true\n    },\n    {\n      \"id\": \"sit in\",\n      \"referencedId\": \"eu ex\",\n      \"label\": \"magna ad sunt tempor\",\n      \"quantity\": 19261462,\n      \"type\": \"consequat est in veniam\",\n      \"good\": true,\n      \"description\": \"do \",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/checkout/cart/line-item",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"checkout",
										"cart",
										"line-item"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"apiAlias\": \"consectetur nisi in Excepteur\",\n  \"name\": \"volupt\",\n  \"token\": \"cillum ipsum\",\n  \"price\": {\n    \"netPrice\": 38307157.24998221,\n    \"totalPrice\": -93015493.86734647,\n    \"positionPrice\": 57755871.14283818,\n    \"taxStatus\": \"dolor dolor\"\n  },\n  \"lineItems\": [\n    {\n      \"id\": \"incididunt in\",\n      \"referencedId\": \"id \",\n      \"label\": \"occaecat\",\n      \"quantity\": 40583083,\n      \"type\": \"tempor sint officia\",\n      \"good\": true,\n      \"description\": \"proident fugiat\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    },\n    {\n      \"id\": \"anim tempor\",\n      \"referencedId\": \"ut non\",\n      \"label\": \"proident eli\",\n      \"quantity\": 65295387,\n      \"type\": \"fugiat id dolor nisi\",\n      \"good\": true,\n      \"description\": \"consectetur\",\n      \"removable\": true,\n      \"stackable\": true,\n      \"modified\": false\n    }\n  ],\n  \"errors\": [\n    {\n      \"key\": \"qui Duis eiusmod\",\n      \"level\": \"in irure reprehenderit aliqua\",\n      \"message\": \"cillum consequat proident id\"\n    },\n    {\n      \"key\": \"sed qui velit\",\n      \"level\": \"in aliqua Ut\",\n      \"message\": \"proident commodo fugiat adipisicing\"\n    }\n  ],\n  \"transactions\": [\n    {\n      \"paymentMethodId\": \"consequat\"\n    },\n    {\n      \"paymentMethodId\": \"exercitation laborum Lorem dolore\"\n    }\n  ],\n  \"modified\": false,\n  \"customerComment\": \"magna tempor\",\n  \"affiliateCode\": \"qui adipisicing sint sit amet\",\n  \"campaignCode\": \"id aute officia\"\n}"
						}
					]
				},
				{
					"name": "SWS: order from a cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Check & save order ID\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.be.a('string');",
									"    pm.environment.set(\"gen_order1_id\", jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true,
							"user-agent": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime libshopgate",
								"type": "text"
							},
							{
								"key": "sw-context-token",
								"value": "{{gen_customer_t2_contextToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerComment\": \"customer comment\",\n  \"affiliateCode\": \"SGConnect_App\",\n  \"campaignCode\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_store_api}}/checkout/order",
							"host": [
								"{{sw_store_api}}"
							],
							"path": [
								"checkout",
								"order"
							]
						},
						"description": "Creates a new order from the current cart and deletes the cart."
					},
					"response": [
						{
							"name": "Order",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "sw-access-key",
										"value": "<API Key>"
									},
									{
										"description": "(Required) Content type of the request",
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"description": "(Required) Accepted response content types",
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerComment\": \"dolor\",\n  \"affiliateCode\": \"Lorem aliquip fugiat voluptate\",\n  \"campaignCode\": \"elit laborum Duis fugiat commodo\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/checkout/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"checkout",
										"order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"billingAddressId\": \"15736ee8b320ca3af736a895700c77d2\",\n  \"currencyId\": \"1f39e67da47084648e6190aa82a1d90b\",\n  \"languageId\": \"64d6d2fb2015a2ebda7d30861e386084\",\n  \"salesChannelId\": \"22e57cb1c48dfed7c0e1a10f8553b9c0\",\n  \"orderDateTime\": \"1944-07-19T20:47:29.171Z\",\n  \"currencyFactor\": -51382242.52623833,\n  \"createdAt\": \"1953-06-06T23:02:24.971Z\",\n  \"id\": \"b39930ea3228f55fb69da68e3ef70559\",\n  \"versionId\": \"d11ca8302d6402345855d8a4cd802832\",\n  \"orderNumber\": \"incididunt laborum sint consequat\",\n  \"billingAddressVersionId\": \"c32456c3a778b3524ade78cb758ac9fa\",\n  \"orderDate\": \"sit elit laborum ut pariatur\",\n  \"price\": {\n    \"netPrice\": -96658985.51593113,\n    \"totalPrice\": -53781775.053623095,\n    \"positionPrice\": 30113586.672133952,\n    \"rawTotal\": 72004634.59773964,\n    \"taxStatus\": \"cupidatat ex in\",\n    \"calculatedTaxes\": {},\n    \"taxRules\": {}\n  },\n  \"amountTotal\": -60831969.65445468,\n  \"amountNet\": 7037119.501918539,\n  \"positionPrice\": 94507073.63106212,\n  \"taxStatus\": \"consequat e\",\n  \"shippingCosts\": {\n    \"unitPrice\": -75897305.75360702,\n    \"totalPrice\": -92222084.96838804,\n    \"quantity\": 53773454,\n    \"calculatedTaxes\": {},\n    \"taxRules\": {},\n    \"referencePrice\": {},\n    \"listPrice\": {\n      \"price\": 44033823.82595047,\n      \"discount\": -5434891.613818184,\n      \"percentage\": -60405313.67604407\n    }\n  },\n  \"shippingTotal\": 73388459.84797949,\n  \"deepLinkCode\": \"tempor\",\n  \"affiliateCode\": \"ex enim aute\",\n  \"campaignCode\": \"aliqua ad\",\n  \"customerComment\": \"in officia Excepteur\",\n  \"customFields\": {},\n  \"createdById\": \"0a5f16cd167e7d90d8e07d63fbe5eba7\",\n  \"updatedById\": \"e6b659a9eeeff768a52b8854685d9d4b\",\n  \"updatedAt\": \"1956-04-05T12:51:46.450Z\",\n  \"stateMachineState\": {\n    \"technicalName\": \"reprehenderit anim velit\",\n    \"createdAt\": \"1992-04-18T02:14:03.805Z\",\n    \"name\": \"in incididunt\",\n    \"id\": \"b9c5cbbc89531a22716cb048225ba845\",\n    \"customFields\": {},\n    \"updatedAt\": \"1988-10-31T13:39:20.571Z\",\n    \"translated\": {}\n  },\n  \"orderCustomer\": {\n    \"email\": \"ipsum ut sit\",\n    \"salutationId\": \"0dc218b440e0ad5560e0b8c74603acb6\",\n    \"firstName\": \"cupidatat laboris Lorem\",\n    \"lastName\": \"cupidatat incididunt voluptate\",\n    \"createdAt\": \"2006-12-10T02:07:42.831Z\",\n    \"id\": \"7b334330712fde726f43b9ee6ddac9fc\",\n    \"versionId\": \"6bb7d90ca6cedd1881b7a5bec2df48c0\",\n    \"company\": \"enim consequat do Duis\",\n    \"title\": \"Lorem\",\n    \"vatIds\": [\n      \"consectetur voluptate id incididunt\",\n      \"incididunt\"\n    ],\n    \"customerNumber\": \"irure quis\",\n    \"customFields\": {},\n    \"updatedAt\": \"1955-02-10T22:38:11.841Z\",\n    \"salutation\": {\n      \"salutationKey\": \"enim quis Lorem\",\n      \"createdAt\": \"1992-11-24T05:23:27.489Z\",\n      \"displayName\": \"pariatur aliquip reprehenderit\",\n      \"letterName\": \"officia labore ea nisi\",\n      \"id\": \"1c6d8651fd6f5c069a0129aea6225707\",\n      \"customFields\": {},\n      \"updatedAt\": \"1997-07-14T05:16:11.240Z\",\n      \"translated\": {}\n    }\n  },\n  \"currency\": {\n    \"factor\": -10248483.923687473,\n    \"symbol\": \"commodo Excepteur\",\n    \"isoCode\": \"consectetur sed in\",\n    \"createdAt\": \"1995-07-09T16:29:08.175Z\",\n    \"shortName\": \"et\",\n    \"name\": \"qui\",\n    \"id\": \"802168aec10262291b688d9ab9b61013\",\n    \"position\": -49462498,\n    \"isSystemDefault\": true,\n    \"customFields\": {},\n    \"updatedAt\": \"2014-04-29T02:00:37.588Z\",\n    \"translated\": {}\n  },\n  \"language\": {\n    \"localeId\": \"ec2f5a23b4fa69d6878e9b025e48e9c5\",\n    \"name\": \"Ut enim laborum\",\n    \"createdAt\": \"1944-11-22T07:09:35.553Z\",\n    \"id\": \"7d46efb3d69cb7c28144b65165025dfa\",\n    \"parentId\": \"ece9a67fe7f96aa9146e6d9fdb8ec469\",\n    \"translationCodeId\": \"48c414ced0b142486fa801b370f96832\",\n    \"customFields\": {},\n    \"updatedAt\": \"1967-11-18T19:34:30.547Z\",\n    \"parent\": {\n      \"value\": \"<Circular reference to #/components/schemas/Language detected>\"\n    },\n    \"locale\": {\n      \"code\": \"Lorem adipisicing magna laborum Ut\",\n      \"createdAt\": \"2022-07-21T08:39:47.993Z\",\n      \"name\": \"officia amet\",\n      \"territory\": \"deserunt tempor\",\n      \"id\": \"f587554eaf9484c4c948d0c2a0afa281\",\n      \"customFields\": {},\n      \"updatedAt\": \"2022-02-22T04:00:51.761Z\",\n      \"translated\": {}\n    },\n    \"translationCode\": {\n      \"code\": \"dolor ex laborum \",\n      \"createdAt\": \"2000-06-25T16:36:50.893Z\",\n      \"name\": \"labore id incididunt proident\",\n      \"territory\": \"tempor\",\n      \"id\": \"b7bc7456816ed4e5b2d4a7f9d38127e0\",\n      \"customFields\": {},\n      \"updatedAt\": \"1965-09-04T16:42:52.756Z\",\n      \"translated\": {}\n    },\n    \"children\": {\n      \"value\": \"<Circular reference to #/components/schemas/Language detected>\"\n    }\n  },\n  \"addresses\": {\n    \"countryId\": \"b46d28913fe53bc40af16f0d446c7b4d\",\n    \"firstName\": \"culpa eu anim\",\n    \"lastName\": \"ipsum consectetur laboris\",\n    \"street\": \"amet minim\",\n    \"zipcode\": \"laboris amet in\",\n    \"city\": \"labore Ut Duis\",\n    \"createdAt\": \"1968-10-01T14:29:33.530Z\",\n    \"id\": \"cfc440d37a6c62f6781e673198b839fc\",\n    \"versionId\": \"9f7ecea609b66f2df90f63b18eed2559\",\n    \"countryStateId\": \"3f6fc54ab757406fa837f81bee498a50\",\n    \"company\": \"consectetur in ad\",\n    \"department\": \"esse mollit\",\n    \"title\": \"ipsum\",\n    \"vatId\": \"commodo Excepteur\",\n    \"phoneNumber\": \"ullamco\",\n    \"additionalAddressLine1\": \"labore consect\",\n    \"additionalAddressLine2\": \"Duis mollit\",\n    \"customFields\": {},\n    \"updatedAt\": \"1978-06-11T06:49:49.629Z\",\n    \"country\": {\n      \"createdAt\": \"1975-02-22T10:30:51.613Z\",\n      \"name\": \"dolore pariatur exercitation Duis\",\n      \"id\": \"9052ad4d3207e0a36ff37212dc987301\",\n      \"iso\": \"aute officia labore\",\n      \"position\": 20243585,\n      \"taxFree\": false,\n      \"active\": false,\n      \"shippingAvailable\": true,\n      \"iso3\": \"ad ex magna dolore sint\",\n      \"displayStateInRegistration\": false,\n      \"forceStateInRegistration\": true,\n      \"companyTaxFree\": true,\n      \"checkVatIdPattern\": false,\n      \"vatIdPattern\": \"fugiat tempor ut aliquip\",\n      \"customFields\": {},\n      \"updatedAt\": \"1976-11-05T08:31:37.719Z\",\n      \"translated\": {},\n      \"states\": {\n        \"countryId\": \"8dda7f30b5abf62c51b49b79e8098d78\",\n        \"shortCode\": \"sed dolore non Lorem\",\n        \"createdAt\": \"2021-04-29T19:13:19.068Z\",\n        \"name\": \"tempor velit sed in sint\",\n        \"id\": \"799dac3f57f1a80bb91b5ad704b2d9ac\",\n        \"position\": 28716517,\n        \"active\": true,\n        \"customFields\": {},\n        \"updatedAt\": \"1973-12-03T00:04:14.654Z\",\n        \"translated\": {}\n      }\n    },\n    \"countryState\": {\n      \"countryId\": \"653967a4d8003647eaf3f3f8f1e6b65a\",\n      \"shortCode\": \"exercitation l\",\n      \"createdAt\": \"1978-11-29T07:20:07.203Z\",\n      \"name\": \"et esse veniam in\",\n      \"id\": \"3381593edae98f54128123f646f3d9c5\",\n      \"position\": -86412599,\n      \"active\": false,\n      \"customFields\": {},\n      \"updatedAt\": \"1980-03-17T14:04:04.095Z\",\n      \"translated\": {}\n    },\n    \"salutation\": {\n      \"salutationKey\": \"eu \",\n      \"createdAt\": \"2002-11-26T13:14:19.975Z\",\n      \"displayName\": \"anim ut\",\n      \"letterName\": \"sed proident exercitation cupidatat\",\n      \"id\": \"b5b3a1ba00d8c0ca98e8d023bf2fc6b4\",\n      \"customFields\": {},\n      \"updatedAt\": \"1983-05-07T09:47:31.552Z\",\n      \"translated\": {}\n    }\n  },\n  \"billingAddress\": {\n    \"countryId\": \"dd8510098156d0e7269fde5c130ca35c\",\n    \"firstName\": \"laborum ullamco sed nisi do\",\n    \"lastName\": \"id pariatur dolore\",\n    \"street\": \"sunt nostrud est\",\n    \"zipcode\": \"cupidatat\",\n    \"city\": \"labo\",\n    \"createdAt\": \"1987-08-06T05:24:18.534Z\",\n    \"id\": \"2a4904d5cfaeee0174ea3572a7bc3d1f\",\n    \"versionId\": \"0cfa918de15c38baace55741997bfa68\",\n    \"countryStateId\": \"9942630e150a9f6b85bfa64568dcae2b\",\n    \"company\": \"dolore\",\n    \"department\": \"voluptate ullamco laborum Ut\",\n    \"title\": \"dolor non\",\n    \"vatId\": \"est qui\",\n    \"phoneNumber\": \"do enim elit\",\n    \"additionalAddressLine1\": \"ad fugiat esse\",\n    \"additionalAddressLine2\": \"mollit do aliqua\",\n    \"customFields\": {},\n    \"updatedAt\": \"1992-07-19T15:02:53.523Z\",\n    \"country\": {\n      \"createdAt\": \"1971-01-09T19:45:09.140Z\",\n      \"name\": \"pariatur non labore ad\",\n      \"id\": \"0b2f3b6d25be2914e5e87f6f4e3ccb88\",\n      \"iso\": \"do id cillum laborum\",\n      \"position\": 73996459,\n      \"taxFree\": false,\n      \"active\": false,\n      \"shippingAvailable\": false,\n      \"iso3\": \"occaecat dolor consectetur esse\",\n      \"displayStateInRegistration\": false,\n      \"forceStateInRegistration\": false,\n      \"companyTaxFree\": true,\n      \"checkVatIdPattern\": true,\n      \"vatIdPattern\": \"labore mollit\",\n      \"customFields\": {},\n      \"updatedAt\": \"1953-10-28T21:00:58.956Z\",\n      \"translated\": {},\n      \"states\": {\n        \"countryId\": \"21f6c3883c3a143353295740bf456e10\",\n        \"shortCode\": \"tempor ipsum ad\",\n        \"createdAt\": \"1960-05-08T21:07:59.002Z\",\n        \"name\": \"de\",\n        \"id\": \"34a89d6d8d4282c8ef132069ff5dad8c\",\n        \"position\": -51807874,\n        \"active\": false,\n        \"customFields\": {},\n        \"updatedAt\": \"1987-04-06T13:54:51.967Z\",\n        \"translated\": {}\n      }\n    },\n    \"countryState\": {\n      \"countryId\": \"156fa20e18c2c74bfc61646e3224a678\",\n      \"shortCode\": \"dolor cupidatat\",\n      \"createdAt\": \"1960-06-16T11:58:37.714Z\",\n      \"name\": \"amet magna laboris\",\n      \"id\": \"cee60bc8f3ed6470ed152a806f8f3157\",\n      \"position\": 12277653,\n      \"active\": true,\n      \"customFields\": {},\n      \"updatedAt\": \"2018-09-19T16:38:00.669Z\",\n      \"translated\": {}\n    },\n    \"salutation\": {\n      \"salutationKey\": \"consequat tempor eu\",\n      \"createdAt\": \"1957-11-12T11:05:18.810Z\",\n      \"displayName\": \"nulla cillum\",\n      \"letterName\": \"quis\",\n      \"id\": \"8ae5e5f4811175a4497fe66f0acdc485\",\n      \"customFields\": {},\n      \"updatedAt\": \"1948-06-24T17:42:35.912Z\",\n      \"translated\": {}\n    }\n  },\n  \"deliveries\": {\n    \"orderId\": \"e9f49a0bdb8b5c71c9b13580b25aef5f\",\n    \"shippingOrderAddressId\": \"5786d6d8190335bfb5148bf59b8966f2\",\n    \"shippingMethodId\": \"60e0fbb23c4d14c26174dec44f5273aa\",\n    \"stateId\": \"d4113f357409e7905140d764b6f13d84\",\n    \"trackingCodes\": [\n      \"in consectetur sed mollit\",\n      \"quis\"\n    ],\n    \"shippingDateEarliest\": \"1954-07-20T22:33:17.633Z\",\n    \"shippingDateLatest\": \"1973-03-08T16:40:32.809Z\",\n    \"createdAt\": \"1976-01-31T17:32:23.666Z\",\n    \"id\": \"d829641b8c2598b29c57c591eea6f5da\",\n    \"versionId\": \"b4305bbc3b2e4e4f17e19a7fbf16dd31\",\n    \"orderVersionId\": \"ffc54d9aba51d4e7b5277b1338337174\",\n    \"shippingOrderAddressVersionId\": \"5a41dd3ed1e022e6a04969f9ab9dc34f\",\n    \"shippingCosts\": {\n      \"unitPrice\": -4363481.230713129,\n      \"totalPrice\": -83508442.32794374,\n      \"quantity\": 49740911,\n      \"calculatedTaxes\": {},\n      \"taxRules\": {},\n      \"referencePrice\": {},\n      \"listPrice\": {\n        \"price\": 74396512.69037265,\n        \"discount\": -50609357.11411254,\n        \"percentage\": -96475699.79851972\n      }\n    },\n    \"customFields\": {},\n    \"updatedAt\": \"1979-09-01T13:51:12.108Z\",\n    \"stateMachineState\": {\n      \"technicalName\": \"est\",\n      \"createdAt\": \"1973-09-12T21:45:00.979Z\",\n      \"name\": \"eiusmod labore veniam\",\n      \"id\": \"6dc11034a1dd1c9674855477c2b2e1e1\",\n      \"customFields\": {},\n      \"updatedAt\": \"1975-09-24T05:36:03.730Z\",\n      \"translated\": {}\n    },\n    \"shippingOrderAddress\": {\n      \"countryId\": \"0f3647ed2d8cf245dfd4a250a01adcdb\",\n      \"firstName\": \"enim consequat mollit proident\",\n      \"lastName\": \"sit anim\",\n      \"street\": \"labore dolore nulla\",\n      \"zipcode\": \"id non enim commodo\",\n      \"city\": \"dolore dolor\",\n      \"createdAt\": \"1968-03-01T10:56:42.304Z\",\n      \"id\": \"2f6a3ebb2b87555bc148eb0b9a241c52\",\n      \"versionId\": \"0abe22a4f617331df27ccc747d3331c3\",\n      \"countryStateId\": \"780f8a40ac5f2f9a987e8c6a7484d4b9\",\n      \"company\": \"reprehenderit proident officia\",\n      \"department\": \"quis voluptate\",\n      \"title\": \"consequat adipisicing do ullamco officia\",\n      \"vatId\": \"eu\",\n      \"phoneNumber\": \"dolore anim esse\",\n      \"additionalAddressLine1\": \"nisi\",\n      \"additionalAddressLine2\": \"elit ad dolore minim\",\n      \"customFields\": {},\n      \"updatedAt\": \"1946-05-21T20:52:04.738Z\",\n      \"country\": {\n        \"createdAt\": \"1999-10-31T06:06:04.042Z\",\n        \"name\": \"cupidatat Ut adipi\",\n        \"id\": \"bfa6d76f53111fd71218148516a9ce24\",\n        \"iso\": \"sint officia en\",\n        \"position\": 64845881,\n        \"taxFree\": true,\n        \"active\": true,\n        \"shippingAvailable\": false,\n        \"iso3\": \"eu adipisicing\",\n        \"displayStateInRegistration\": true,\n        \"forceStateInRegistration\": false,\n        \"companyTaxFree\": false,\n        \"checkVatIdPattern\": true,\n        \"vatIdPattern\": \"Ut voluptate laboris\",\n        \"customFields\": {},\n        \"updatedAt\": \"1961-03-14T22:34:47.889Z\",\n        \"translated\": {},\n        \"states\": {\n          \"countryId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"shortCode\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"createdAt\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"name\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"position\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"active\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"customFields\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"updatedAt\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"translated\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"countryState\": {\n        \"countryId\": \"f1cbe4fac7b1c7e06e7f38b40971d7bd\",\n        \"shortCode\": \"anim commodo\",\n        \"createdAt\": \"2020-01-24T16:21:27.019Z\",\n        \"name\": \"exercitation veniam sunt dolor laborum\",\n        \"id\": \"d106dc5e9b9f380247a009cf9337e153\",\n        \"position\": 65732720,\n        \"active\": false,\n        \"customFields\": {},\n        \"updatedAt\": \"1974-05-10T18:21:14.087Z\",\n        \"translated\": {}\n      },\n      \"salutation\": {\n        \"salutationKey\": \"sint aliqua\",\n        \"createdAt\": \"1971-04-28T06:48:40.739Z\",\n        \"displayName\": \"esse irure velit\",\n        \"letterName\": \"ut esse Excepteur\",\n        \"id\": \"79c587a7643370cd95957d648e62661d\",\n        \"customFields\": {},\n        \"updatedAt\": \"1950-04-13T18:57:02.534Z\",\n        \"translated\": {}\n      }\n    },\n    \"shippingMethod\": {\n      \"deliveryTimeId\": \"70febfe0962250df47e9f3b5a02eed98\",\n      \"taxType\": \"dolore proident adipisicing\",\n      \"createdAt\": \"1982-12-29T22:15:09.848Z\",\n      \"name\": \"Excepteur ut\",\n      \"id\": \"c76fe07a9b2be2c9bb312e3724364467\",\n      \"active\": true,\n      \"customFields\": {},\n      \"mediaId\": \"b5bfd7cd204ef5c25ccd4e21360f52e8\",\n      \"description\": \"pariatur in eu laboris enim\",\n      \"trackingUrl\": \"culpa laborum proid\",\n      \"updatedAt\": \"1977-11-27T22:10:16.697Z\",\n      \"translated\": {},\n      \"deliveryTime\": {\n        \"name\": \"sint ea non qui\",\n        \"min\": 98661822,\n        \"max\": 4634893,\n        \"unit\": \"nostrud cillum\",\n        \"createdAt\": \"2003-05-21T20:27:00.644Z\",\n        \"id\": \"c56207e81a7c8dd9b4d6bff1cfeb07e2\",\n        \"customFields\": {},\n        \"updatedAt\": \"2011-08-10T21:03:27.995Z\",\n        \"translated\": {}\n      },\n      \"availabilityRule\": {\n        \"name\": \"veniam sit in commodo aute\",\n        \"createdAt\": \"1988-08-23T07:30:02.328Z\",\n        \"id\": \"2df401c0b63a5dabcc451f4cdf51ca7e\",\n        \"description\": \"do veniam aliquip\",\n        \"customFields\": {},\n        \"updatedAt\": \"2020-03-17T20:14:15.701Z\"\n      },\n      \"prices\": {\n        \"shippingMethodId\": \"337953bb72e10a885e79b5a14a77a2cb\",\n        \"createdAt\": \"1975-06-26T02:21:48.597Z\",\n        \"id\": \"eab28228fa4f30768a37dfb28bb0f865\",\n        \"ruleId\": \"eb4bce077ad63f9c2232e637d4e75e27\",\n        \"calculation\": 84254625,\n        \"calculationRuleId\": \"a9d7e706a64eda96a5c14f5085767b24\",\n        \"quantityStart\": -93164771.59849246,\n        \"quantityEnd\": 64744098.519682944,\n        \"currencyPrice\": {},\n        \"customFields\": {},\n        \"updatedAt\": \"1985-11-18T08:59:58.168Z\"\n      },\n      \"media\": {\n        \"createdAt\": \"2002-02-08T05:28:36.638Z\",\n        \"id\": \"025f8a251db3cc4c6662f37619753467\",\n        \"mimeType\": \"ea ut quis ipsum\",\n        \"fileExtension\": \"occaecat proident aute enim amet\",\n        \"uploadedAt\": \"2003-02-06T06:47:33.253Z\",\n        \"fileName\": \"veniam cil\",\n        \"fileSize\": 88128084,\n        \"metaData\": {},\n        \"alt\": \"sint reprehenderit in officia\",\n        \"title\": \"labore voluptate\",\n        \"url\": \"quis amet Excepteur\",\n        \"hasFile\": false,\n        \"private\": true,\n        \"customFields\": {},\n        \"updatedAt\": \"1959-07-08T23:50:58.078Z\",\n        \"translated\": {},\n        \"thumbnails\": {\n          \"mediaId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"width\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"height\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"createdAt\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"url\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"customFields\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"updatedAt\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"tags\": {\n        \"createdAt\": \"1976-07-27T17:27:40.424Z\",\n        \"id\": \"8bea91b9d2258c24157a80bbebe69773\",\n        \"updatedAt\": \"2005-04-19T08:14:10.875Z\"\n      },\n      \"tax\": {\n        \"taxRate\": 40863393.57677117,\n        \"name\": \"elit ut id\",\n        \"position\": -11882354,\n        \"createdAt\": \"1985-03-16T10:14:20.808Z\",\n        \"id\": \"17fcd05c2e1ab15083598125ee37a50a\",\n        \"customFields\": {},\n        \"updatedAt\": \"1989-01-15T11:10:09.460Z\"\n      }\n    },\n    \"positions\": {\n      \"orderDeliveryId\": \"53c808908ae42f5d181f2f4c80db5efc\",\n      \"orderLineItemId\": \"971e9b9849a8bb5cc70db0206c5d2a4a\",\n      \"createdAt\": \"2016-08-02T00:00:33.566Z\",\n      \"id\": \"c1b7742dc2c16c9a09144645294be45e\",\n      \"versionId\": \"c888efbebaecf4e6b897217375dcdecc\",\n      \"orderDeliveryVersionId\": \"2f409d4c541273bdf9438354967b7ea7\",\n      \"orderLineItemVersionId\": \"63ef24d2469e5a6be8d0394882096014\",\n      \"price\": {\n        \"unitPrice\": 61867607.98095739,\n        \"totalPrice\": -67916943.96501881,\n        \"quantity\": 38957797,\n        \"calculatedTaxes\": {},\n        \"taxRules\": {},\n        \"referencePrice\": {},\n        \"listPrice\": {\n          \"price\": -24870931.822395504,\n          \"discount\": -84058928.5754644,\n          \"percentage\": 46350576.98717654\n        }\n      },\n      \"unitPrice\": -410846.74694657326,\n      \"totalPrice\": -9641724.997882098,\n      \"quantity\": 17570571,\n      \"customFields\": {},\n      \"updatedAt\": \"1979-01-12T07:43:47.262Z\"\n    }\n  },\n  \"lineItems\": {\n    \"orderId\": \"ac1565283972b296b83a3d75271fecac\",\n    \"identifier\": \"magna \",\n    \"quantity\": 80798346,\n    \"label\": \"dolore exercitation sint\",\n    \"position\": -64534981,\n    \"children\": {\n      \"value\": \"<Circular reference to #/components/schemas/OrderLineItem detected>\"\n    },\n    \"createdAt\": \"2009-12-09T07:13:32.441Z\",\n    \"id\": \"ca0315ad638f43561762f8bdefd446e7\",\n    \"versionId\": \"46f84bfa0f5a9d3c357029b869344b0b\",\n    \"orderVersionId\": \"f55bc97d2dff46fef401bd5caca687f1\",\n    \"productId\": \"fd78f44d08dbb81db327074795be6a71\",\n    \"productVersionId\": \"f94b068f1b82d769978be0464ab624ad\",\n    \"parentId\": \"35c80ae24b82aa3f309d12bea165a74e\",\n    \"parentVersionId\": \"0f19370e8dd494c3d0bcb355bd5f2cfc\",\n    \"coverId\": \"01d41b0d428cb07fa80a47724d272f0c\",\n    \"referencedId\": \"veniam\",\n    \"payload\": {},\n    \"good\": false,\n    \"removable\": false,\n    \"stackable\": false,\n    \"priceDefinition\": {},\n    \"unitPrice\": -31710371.766379982,\n    \"totalPrice\": -40935699.93736668,\n    \"description\": \"Excepteur ullamco ut proident\",\n    \"type\": \"laborum id\",\n    \"customFields\": {},\n    \"updatedAt\": \"1953-02-16T04:16:26.088Z\",\n    \"cover\": {\n      \"createdAt\": \"1968-06-27T15:21:23.107Z\",\n      \"id\": \"5a69a6515a52563a746d760be06c2d06\",\n      \"mimeType\": \"esse incididunt\",\n      \"fileExtension\": \"deserunt sint elit cillum ea\",\n      \"uploadedAt\": \"1993-07-06T01:08:18.188Z\",\n      \"fileName\": \"et elit\",\n      \"fileSize\": -51661832,\n      \"metaData\": {},\n      \"alt\": \"nostrud commodo\",\n      \"title\": \"qui nulla laboris in aliquip\",\n      \"url\": \"dolor\",\n      \"hasFile\": true,\n      \"private\": true,\n      \"customFields\": {},\n      \"updatedAt\": \"1954-06-18T15:38:19.017Z\",\n      \"translated\": {},\n      \"thumbnails\": {\n        \"mediaId\": \"a93f0b866c62d3d43ce3b7ce5137e711\",\n        \"width\": 36562510,\n        \"height\": -59891153,\n        \"createdAt\": \"1993-11-25T00:20:14.582Z\",\n        \"id\": \"e1cfff95db55594b143d7ee2e5039128\",\n        \"url\": \"adipisicing quis elit in\",\n        \"customFields\": {},\n        \"updatedAt\": \"1946-05-26T02:12:09.521Z\"\n      }\n    },\n    \"orderDeliveryPositions\": {\n      \"orderDeliveryId\": \"bca83b3f636e400b5fed875cffe25003\",\n      \"orderLineItemId\": \"4a818afe60414bc5c48a95d7d558c2d2\",\n      \"createdAt\": \"2014-12-25T19:43:07.801Z\",\n      \"id\": \"080e6c8604a409379c42113af87745f6\",\n      \"versionId\": \"a6e9b3c8d7c647d53a5dbaaab43271a5\",\n      \"orderDeliveryVersionId\": \"f535aabb8f806f9bd2a94211af13ddc3\",\n      \"orderLineItemVersionId\": \"fa3e8627e6b811eada89ddf5f8b329fa\",\n      \"price\": {\n        \"unitPrice\": 13856827.103544146,\n        \"totalPrice\": 14757164.281691313,\n        \"quantity\": -1244054,\n        \"calculatedTaxes\": {},\n        \"taxRules\": {},\n        \"referencePrice\": {},\n        \"listPrice\": {\n          \"price\": -59981472.814996906,\n          \"discount\": 70267426.84233457,\n          \"percentage\": -79180744.23059416\n        }\n      },\n      \"unitPrice\": 13241659.10291329,\n      \"totalPrice\": -6672450.760444358,\n      \"quantity\": -85943937,\n      \"customFields\": {},\n      \"updatedAt\": \"1947-01-09T19:57:21.757Z\"\n    },\n    \"parent\": {\n      \"value\": \"<Circular reference to #/components/schemas/OrderLineItem detected>\"\n    }\n  },\n  \"transactions\": {\n    \"orderId\": \"31897a9cafc84633fdeb22e0e126a940\",\n    \"paymentMethodId\": \"ad03aef1e800bc3b5e9037e8bc9f01cf\",\n    \"amount\": {\n      \"unitPrice\": -38729749.78869035,\n      \"totalPrice\": -75723009.84617724,\n      \"quantity\": -52463726,\n      \"calculatedTaxes\": {},\n      \"taxRules\": {},\n      \"referencePrice\": {},\n      \"listPrice\": {\n        \"price\": -93895664.63555354,\n        \"discount\": -92449806.82318449,\n        \"percentage\": -87122518.93236469\n      }\n    },\n    \"stateId\": \"968229dc25e739a5ac0b5308e457ae23\",\n    \"createdAt\": \"2005-01-11T13:26:57.757Z\",\n    \"id\": \"787caa2acbaf3142ef7d03ce2cb763b4\",\n    \"versionId\": \"54e73d80c64008fd785a3bbdb080d5ba\",\n    \"orderVersionId\": \"4a0bf6cb86af92b836f7afb185d70d05\",\n    \"customFields\": {},\n    \"updatedAt\": \"1971-07-18T02:19:07.105Z\",\n    \"stateMachineState\": {\n      \"technicalName\": \"n\",\n      \"createdAt\": \"2007-04-12T12:08:20.455Z\",\n      \"name\": \"dolor Ut\",\n      \"id\": \"7a3eb303ff2299f4334779418cb4ccb6\",\n      \"customFields\": {},\n      \"updatedAt\": \"2016-06-01T04:10:27.536Z\",\n      \"translated\": {}\n    },\n    \"paymentMethod\": {\n      \"createdAt\": \"1992-08-03T21:58:21.260Z\",\n      \"name\": \"proident Lorem exercitation\",\n      \"id\": \"554cacaded416714758950727f986297\",\n      \"distinguishableName\": \"enim in\",\n      \"description\": \"esse enim nulla mollit\",\n      \"position\": -83402560,\n      \"active\": false,\n      \"afterOrderEnabled\": false,\n      \"customFields\": {},\n      \"mediaId\": \"7b90fca3890e823fc6cc3d102acb623a\",\n      \"updatedAt\": \"1950-03-18T17:17:11.633Z\",\n      \"translated\": {},\n      \"media\": {\n        \"createdAt\": \"1987-12-07T13:57:15.283Z\",\n        \"id\": \"3c8edea7631f58eca76f6de516cd864f\",\n        \"mimeType\": \"voluptate \",\n        \"fileExtension\": \"id sint quis consectetur\",\n        \"uploadedAt\": \"1977-07-12T06:40:12.952Z\",\n        \"fileName\": \"Ut\",\n        \"fileSize\": -46714539,\n        \"metaData\": {},\n        \"alt\": \"irure culpa enim minim\",\n        \"title\": \"incididunt culpa deserunt dolore\",\n        \"url\": \"eu\",\n        \"hasFile\": true,\n        \"private\": true,\n        \"customFields\": {},\n        \"updatedAt\": \"1997-12-13T21:01:57.855Z\",\n        \"translated\": {},\n        \"thumbnails\": {\n          \"mediaId\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"width\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"height\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"createdAt\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"id\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"url\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"customFields\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"updatedAt\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      }\n    }\n  },\n  \"documents\": {\n    \"documentTypeId\": \"4bac7c04d82ccd61b9737f0891d5f380\",\n    \"fileType\": \"dolor qui ipsum ea aliqua\",\n    \"orderId\": \"d89c7d43fa6bdd0c7c597a572b8760c7\",\n    \"config\": {},\n    \"deepLinkCode\": \"sint proident officia\",\n    \"createdAt\": \"2017-08-01T16:49:48.293Z\",\n    \"id\": \"ecad69307f8882463dc7f18a7b9a2f63\",\n    \"referencedDocumentId\": \"48f742282bf1ced6f12db907302dc1ca\",\n    \"documentMediaFileId\": \"06560e20498b11e8d55feb705f43c71c\",\n    \"orderVersionId\": \"7a406a869e1064c521e636dfe2a6233e\",\n    \"sent\": true,\n    \"static\": true,\n    \"customFields\": {},\n    \"updatedAt\": \"2001-05-17T15:54:50.043Z\",\n    \"documentType\": {\n      \"technicalName\": \"adipisicing incididunt sint\",\n      \"createdAt\": \"1993-01-23T06:03:15.709Z\",\n      \"name\": \"ut ipsum fugiat sed\",\n      \"id\": \"b29a5c3a785a27a5341384949ffd86a5\",\n      \"updatedAt\": \"1984-11-29T19:12:36.899Z\",\n      \"customFields\": {},\n      \"translated\": {}\n    },\n    \"order\": {\n      \"value\": \"<Circular reference to #/components/schemas/Order detected>\"\n    },\n    \"referencedDocument\": {\n      \"value\": \"<Circular reference to #/components/schemas/Document detected>\"\n    },\n    \"dependentDocuments\": {\n      \"value\": \"<Circular reference to #/components/schemas/Document detected>\"\n    },\n    \"documentMediaFile\": {\n      \"createdAt\": \"1977-03-22T20:08:01.157Z\",\n      \"id\": \"63498858d25e791dd95742603ba66571\",\n      \"mimeType\": \"sit\",\n      \"fileExtension\": \"officia est\",\n      \"uploadedAt\": \"1985-11-06T19:19:19.337Z\",\n      \"fileName\": \"laboris\",\n      \"fileSize\": 69473690,\n      \"metaData\": {},\n      \"alt\": \"in dolor esse proident\",\n      \"title\": \"tempor consequa\",\n      \"url\": \"dolore occaecat ea\",\n      \"hasFile\": true,\n      \"private\": true,\n      \"customFields\": {},\n      \"updatedAt\": \"1987-01-19T16:38:30.233Z\",\n      \"translated\": {},\n      \"thumbnails\": {\n        \"mediaId\": \"445048c7e4022b856d71841fad1d129a\",\n        \"width\": -1113717,\n        \"height\": -80113444,\n        \"createdAt\": \"1998-12-07T18:52:19.789Z\",\n        \"id\": \"e0ca5377738566a2b56cb1669dd03aef\",\n        \"url\": \"officia laboris aute\",\n        \"customFields\": {},\n        \"updatedAt\": \"1993-10-01T21:28:29.556Z\"\n      }\n    }\n  },\n  \"tags\": {\n    \"createdAt\": \"2019-08-24T14:12:22.496Z\",\n    \"id\": \"8bf62eebff6a2739b923a8413c66ddb5\",\n    \"updatedAt\": \"1964-10-07T12:40:08.296Z\"\n  }\n}"
						}
					]
				},
				{
					"name": "SWA: get order with WebC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check WebCheckout order extension\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.included).to.be.a('array');\r",
									"    const webc = jsonData.included.find(item => item.type === 'shopgate_webc_order');\r",
									"    pm.expect(webc).to.not.be.undefined;\r",
									"    pm.expect(webc.attributes.userAgent).to.be.a('string').to.contain('libshopgate');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{gen_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": [\n        {\n            \"type\": \"equals\",\n            \"field\": \"id\",\n            \"value\": \"{{gen_order1_id}}\"\n        }\n    ],\n    \"associations\": {\n        \"shopgateWebcOrder\":{}\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_endpoint_api}}/search/order",
							"host": [
								"{{sw_endpoint_api}}"
							],
							"path": [
								"search",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "SWA: get SG webc order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Check WebCheckout order extension\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.data).to.be.a('array');\r",
									"    const webc = jsonData.data.find(item => item.type === 'shopgate_webc_order');\r",
									"    pm.expect(webc).to.not.be.undefined;\r",
									"    pm.expect(webc.attributes.userAgent).to.be.a('string').to.contain('libshopgate');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{gen_access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"filter\": [\n        {\n            \"type\": \"equals\",\n            \"field\": \"shopwareOrderId\",\n            \"value\": \"{{gen_order1_id}}\"\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{sw_endpoint_api}}/search/shopgate-webc-order",
							"host": [
								"{{sw_endpoint_api}}"
							],
							"path": [
								"search",
								"shopgate-webc-order"
							]
						}
					},
					"response": []
				}
			],
			"description": "SG-163 requires userAgent to be saved with the order & be retrieved via API",
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "{{gen_accessKey}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "sw-access-key",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"/**",
					" * SW Token generation",
					" */",
					"var getToken = true;",
					"if (!pm.environment.get('gen_token_expires') || !pm.environment.get('gen_access_token')) {",
					"    console.log('Token or expiry date are missing');",
					"} else if (pm.environment.get('gen_token_expires') <= (new Date()).getTime()) {",
					"    console.log('Token is expired');",
					"} else {",
					"    getToken = false;",
					"}",
					"",
					"if (getToken === true) {",
					"    const createRequest = {",
					"        \"client_id\": pm.environment.get(\"sw_client_id\"),",
					"        \"grant_type\": \"password\",",
					"        \"scopes\": \"write\",",
					"        \"username\": pm.environment.get(\"sw_admin\"),",
					"        \"password\": pm.environment.get(\"sw_pass\")",
					"    };",
					"    const refreshRequest = {",
					"        \"grant_type\": \"refresh_token\",",
					"        \"client_id\": pm.environment.get(\"sw_client_id\"),",
					"        \"refresh_token\": pm.environment.get(\"gen_refresh_token\")",
					"    };",
					"    // SW Auth",
					"    const authRequest = {",
					"        url: pm.globals.replaceIn(pm.environment.replaceIn(pm.environment.get(\"sw_endpoint_auth\"))),",
					"        method: 'POST',",
					"        header: 'Accept: application/json\\nContent-Type: application/json; charset=utf-8',",
					"        body: {",
					"            mode: 'application/json'",
					"        }",
					"    };",
					"    // set body depending on type of request needed",
					"    authRequest.body.raw = JSON.stringify(pm.environment.get(\"gen_refresh_token\") ? refreshRequest : createRequest);",
					"    pm.sendRequest(authRequest, function (err, res) {",
					"        if (res.code !== 200) {",
					"            pm.environment.unset('gen_access_token');",
					"            pm.environment.unset('gen_token_expires');",
					"            pm.environment.unset('gen_refresh_token');",
					"            console.log('Invalidated refresh token');",
					"            return;",
					"        }",
					"        ",
					"        var responseJson = res.json();",
					"        pm.environment.set('gen_access_token', responseJson.access_token)",
					"",
					"        var expiryDate = new Date();",
					"        expiryDate.setSeconds(expiryDate.getSeconds() + responseJson.expires_in);",
					"        pm.environment.set('gen_token_expires', expiryDate.getTime());",
					"        pm.environment.set('gen_refresh_token', responseJson.refresh_token);",
					"        console.log('Saved the token and expiry date');",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// remove generated token data if not authorized",
					"if (pm.response.code === 401) {",
					"    console.log('Removing tokens due to 401 response. Please try again.');",
					"    pm.environment.unset('gen_access_token');",
					"    pm.environment.unset('gen_token_expires');",
					"    pm.environment.unset('gen_refresh_token');",
					"}"
				]
			}
		}
	]
}